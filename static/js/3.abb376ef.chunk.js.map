{"version":3,"sources":["components/Contents/Chats/Chats.module.css","components/Contents/Chats/Dialogs/Dialogs.module.css","components/Contents/Chats/Dialogs/Dialog/Dialog.module.css","components/Contents/Chats/Messages/Messages.module.css","components/Contents/Chats/Messages/NewMessage/NewMessage.module.css","components/Contents/Chats/Messages/Message/Message.module.css","components/Contents/Chats/Messages/MessagesHeader/MessagesHeader.module.css","components/Contents/Chats/Dialogs/Dialog/Dialog.jsx","components/Contents/Chats/Dialogs/Dialogs.jsx","components/Contents/Chats/Messages/NewMessage/NewMessage.jsx","components/Contents/Chats/Messages/NewMessage/NewMessageContainer.jsx","components/Contents/Chats/Messages/Message/Message.jsx","components/Contents/Chats/Messages/Message/MessageContainer.jsx","components/Contents/Chats/Messages/MessagesHeader/MessagesHeader.jsx","components/Contents/Chats/Messages/MessagesHeader/MessagesHeaderContainer.jsx","components/Contents/Chats/Messages/Messages.jsx","components/Contents/Chats/Messages/Messages_Container.jsx","components/Contents/Chats/Chats.jsx"],"names":["module","exports","Dialog","React","memo","props","to","url","dialog","id","className","s","src","photos","small","alt","user_img","online","name_and_mess","name","mess","compose","connect","state","dialogs_data","chats_page","device","app","getDialogsDataTC","withRouter","useEffect","urlForDialog","dialogs","header","title","search_wrapper","type","search","placeholder","href","search_btn","dialog_wrapper","map","key","Math","random","reduxForm","form","wrapper","onSubmit","handleSubmit","smile_icons","Field","component","message","send","addMess","reset","values","newMessText","Message","message_wrapper","my_message","text","onClick","mess_delete","img_and_date","imgUrl","mes_img","date","delMess","MesagesHeader","profile","user_id","others","mes_header_data","fullName","userId","getMessagesDataTC","MessagesHeader","messages","all_mes","messages_data","isLoading","match","params","Preloader","chats","exact","path","render","preview"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,QAAU,yB,oBCAzDD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,MAAQ,uBAAuB,OAAS,wBAAwB,eAAiB,gCAAgC,WAAa,4BAA4B,eAAiB,kC,oBCAjQD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,SAAW,yBAAyB,KAAO,qBAAqB,KAAO,qBAAqB,OAAS,yB,oBCAvJD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,QAAU,4B,oBCAlED,EAAOC,QAAU,CAAC,QAAU,4BAA4B,QAAU,4BAA4B,YAAc,gCAAgC,KAAO,2B,oBCAnJD,EAAOC,QAAU,CAAC,gBAAkB,iCAAiC,QAAU,yBAAyB,WAAa,4BAA4B,KAAO,sBAAsB,aAAe,8BAA8B,KAAO,sBAAsB,QAAU,yBAAyB,QAAU,2B,oBCArSD,EAAOC,QAAU,CAAC,OAAS,+BAA+B,SAAW,iCAAiC,KAAO,6BAA6B,KAAO,6BAA6B,OAAS,iC,wJCgBxKC,EAbAC,IAAMC,MAAK,SAACC,GAEvB,OAAO,kBAAC,IAAD,CAASC,GAAID,EAAME,IAAMF,EAAMG,OAAOC,IACzC,yBAAKC,UAAWC,IAAEH,QACd,yBAAKI,IAAKP,EAAMG,OAAOK,OAAOC,OAAU,4CACpCC,IAAI,WAAWL,UAAS,UAAKC,IAAEK,SAAP,YAAmBL,IAAEM,UACjD,yBAAKP,UAAWC,IAAEO,eACd,uBAAGR,UAAWC,IAAEQ,MAAOd,EAAMG,OAAOW,MACpC,uBAAGT,UAAWC,IAAES,MAAhB,mDCyBDC,cAAQC,aAJC,SAACC,GAAD,MACpB,CAACC,aAAcD,EAAME,WAAWD,aAChCE,OAAOH,EAAMI,IAAID,UAE0B,CAACE,uBAAoBC,IAArDR,EA5BC,SAAChB,GACbyB,qBAAU,WACNzB,EAAMuB,iBAAiB,EAAG,MAC5B,IACF,IAAIG,EAAgC,WAAjB1B,EAAMqB,OAAuB,mBAAqB,UACrE,OACI,yBAAKhB,UAAU,YACX,yBAAKA,UAAWC,IAAEqB,SACd,yBAAKtB,UAAWC,IAAEsB,QACd,wBAAIvB,UAAWC,IAAEuB,OAAjB,YACA,yBAAKxB,UAAWC,IAAEwB,gBACd,2BAAOC,KAAK,OAAO1B,UAAWC,IAAE0B,OAAQC,YAAY,WACpD,uBAAGC,KAAK,KAAK7B,UAAWC,IAAE6B,YAAa,uBAAG9B,UAAU,oBAG5D,yBAAKA,UAAWC,IAAE8B,gBACbpC,EAAMmB,aAAakB,KAAI,SAAAlC,GAAM,OAC1B,kBAAC,EAAD,CAAQmC,IAAqB,GAAhBC,KAAKC,SAAerC,OAAQA,EAAQD,IAAKwB,a,sDCR/De,cAAU,CAAEC,KAAM,kBAAlBD,EAdI,SAACzC,GAChB,OACI,0BAAMK,UAAWC,IAAEqC,QAASC,SAAU5C,EAAM6C,cACxC,yBAAKxC,UAAWC,IAAEwC,aACd,uBAAGzC,UAAU,kBACb,uBAAGA,UAAU,qBAEjB,kBAAC0C,EAAA,EAAD,CAAOjC,KAAM,cAAekC,UAAW,WAAY3C,UAAWC,IAAE2C,UAChE,4BAAQ5C,UAAWC,IAAE4C,MAAM,uBAAG7C,UAAU,kBAAb,a,QCIxBY,cAAQ,KAAM,CAAEkC,YAASC,WAAzBnC,EAVa,SAACjB,GAKxB,OAAO,kBAAC,EAAD,CAAY4C,SAJF,SAACS,GACfrD,EAAMmD,QAAQE,EAAOC,aACrBtD,EAAMoD,MAAM,wB,kBCSLG,EAfC,SAACvD,GACb,OAAO,yBAAKK,UAAS,UAAKC,IAAEkD,kBACxB,yBAAKnD,UAAS,UAAKC,IAAEmD,aACjB,uBAAGpD,UAAWC,IAAEoD,MAAO1D,EAAMiD,QAAQS,KACrC,uBAAGrD,UAAU,gBAAgBsD,QAAS,kBAAM3D,EAAM4D,YAAY5D,EAAMiD,QAAQ7C,QAE5E,yBAAKC,UAAWC,IAAEuD,cACd,yBAAKtD,IAAKP,EAAMiD,QAAQa,OAAQpD,IAAI,WAAWL,UAAWC,IAAEyD,UAC5D,uBAAG1D,UAAWC,IAAE0D,MAAOhE,EAAMiD,QAAQe,UCFtC/C,cAAQ,KAAM,CAACgD,aAAfhD,EAJU,SAACjB,GAAD,OACrB,kBAAC,EAAD,CAAS4D,YAAa5D,EAAMiE,QAAShB,QAASjD,EAAMiD,a,kBCkBzCiB,EApBO,SAAClE,GACnB,OACI,yBAAKK,UAAWC,IAAEsB,QACd,kBAAC,IAAD,CAASvB,UAAWC,IAAE6D,QAASlE,GAAE,oBAAgBD,EAAMoE,UACnD,yBAAK7D,IAAKP,EAAM8D,OAAQpD,IAAI,WAAWL,UAAWC,IAAEK,YAExD,yBAAKN,UAAU,OACX,kBAAC,IAAD,CAASJ,GAAE,oBAAgBD,EAAMoE,SAAW/D,UAAWC,IAAEQ,MAAOd,EAAMc,MACtE,uBAAGT,UAAWC,IAAE0D,MAAOhE,EAAMgE,OAEjC,yBAAK3D,UAAWC,IAAE+D,QACd,uBAAGhE,UAAU,gBACb,uBAAGA,UAAU,kBACb,uBAAGA,UAAU,gBACb,uBAAGA,UAAU,iBCGdW,cACXC,aAVoB,SAACC,GACrB,MAAO,CACHJ,KAAMI,EAAME,WAAWkD,gBAAgBC,SACvCH,QAASlD,EAAME,WAAWkD,gBAAgBE,OAC1CV,OAAQ,4CACRE,KAAM,gCAKe,CAAES,wBAAsBjD,IADtCR,EAdgB,SAAChB,GAC5B,OAAO,kBAAC0E,EAAD,CAAgB5D,KAAMd,EAAMc,KAC/BgD,OAAQ9D,EAAM8D,OAAQE,KAAMhE,EAAMgE,KAClCI,QAASpE,EAAMoE,aCcRnD,eAFO,SAACC,GAAD,MAAY,CAACE,WAAYF,EAAME,cAEd,GAAxBH,EAjBE,SAACjB,GACd,OACI,yBAAKK,UAAU,YACX,yBAAKA,UAAWC,IAAEqE,UACd,kBAAC,EAAD,MACA,yBAAKtE,UAAWC,IAAEsE,SACjB5E,EAAMoB,WAAWyD,cAAcxC,KAAI,SAAAY,GAAO,OACvC,kBAAC,EAAD,CAAkBX,IAAmB,GAAdC,KAAKC,SAAaS,QAASA,QAGtD,kBAAC,EAAD,W,QCSDjC,cACXC,aANoB,SAACC,GACrB,MAAO,CACH4D,UAAW5D,EAAME,WAAW0D,aAIP,CAAEL,wBAC3BjD,IAFWR,EAjBY,SAAChB,GAQxB,OAPAyB,qBAAU,WACNzB,EAAMyE,kBAAkBzE,EAAM+E,MAAMC,OAAOZ,WAC5C,IACH3C,qBAAU,WACNzB,EAAMyE,kBAAkBzE,EAAM+E,MAAMC,OAAOZ,WAC5C,CAACpE,EAAM+E,MAAMC,OAAOZ,UAEhBpE,EAAM8E,UACP,yBAAKzE,UAAU,YAAW,kBAAC4E,EAAA,EAAD,OAC1B,kBAAC,EAAD,SCcKhE,uBADS,SAACC,GAAD,MAAY,CAAEG,OAAQH,EAAMI,IAAID,UAChB,GAAzBJ,EAxBD,SAACjB,GAMX,OACI,yBAAKK,UAAWC,IAAE4E,OACd,yBAAK7E,UAAU,OACO,WAAjBL,EAAMqB,OACD,kBAAC,IAAD,CAAO8D,OAAK,EAACC,KAAK,SAASC,OAAQ,kBAAM,kBAAC,EAAD,SACzC,kBAAC,EAAD,MAEN,kBAAC,IAAD,CAAOD,KAXM,WAAjBpF,EAAMqB,OACC,2BACF,kBAUGgE,OAAQ,kBAAM,kBAAC,EAAD,SAClB,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAsB,UAAhBpF,EAAMqB,OAAqB,YAAc,UACxD,wBAAIhB,UAAWC,IAAEgF,SAAjB","file":"static/js/3.abb376ef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chats\":\"Chats_chats__2UDEc\",\"preview\":\"Chats_preview__2P7WF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1cwBF\",\"header\":\"Dialogs_header__2K6re\",\"title\":\"Dialogs_title__2HXFy\",\"search\":\"Dialogs_search__1ATyM\",\"search_wrapper\":\"Dialogs_search_wrapper__2Vffr\",\"search_btn\":\"Dialogs_search_btn__1SdC4\",\"dialog_wrapper\":\"Dialogs_dialog_wrapper__2vQp_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__2IDMk\",\"user_img\":\"Dialog_user_img___WWOX\",\"name\":\"Dialog_name__3MYaq\",\"mess\":\"Dialog_mess__2wWI0\",\"online\":\"Dialog_online__1pfNm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__l15mY\",\"all_mes\":\"Messages_all_mes__2Qbti\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"NewMessage_wrapper__1HriV\",\"message\":\"NewMessage_message__15Smz\",\"smile_icons\":\"NewMessage_smile_icons__194Jt\",\"send\":\"NewMessage_send__1fvCO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message_wrapper\":\"Message_message_wrapper__2lchV\",\"message\":\"Message_message__3jSK3\",\"my_message\":\"Message_my_message__rrJ2L\",\"text\":\"Message_text__b2m9Y\",\"img_and_date\":\"Message_img_and_date__1duZP\",\"date\":\"Message_date__2S9jl\",\"mes_img\":\"Message_mes_img__3-zlW\",\"del_btn\":\"Message_del_btn__99OZM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MessagesHeader_header__2n4Sh\",\"user_img\":\"MessagesHeader_user_img__2lane\",\"name\":\"MessagesHeader_name__3984d\",\"date\":\"MessagesHeader_date__1NoQ_\",\"others\":\"MessagesHeader_others__fF-zJ\"};","import React from 'react';\r\nimport s from './Dialog.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Dialog = React.memo((props) => {\r\n\r\n    return <NavLink to={props.url + props.dialog.id} >\r\n        <div className={s.dialog} >\r\n            <img src={props.dialog.photos.small ||  \"https://baturevich.ru/images/cn/user2.jpg\"}\r\n                alt=\"User-img\" className={`${s.user_img} ${s.online}`} />\r\n            <div className={s.name_and_mess}>\r\n                <p className={s.name}>{props.dialog.name}</p>\r\n                <p className={s.mess}>Lorem, ipsum dolor sit amet consectetu...</p>\r\n            </div>\r\n        </div>\r\n    </NavLink>\r\n});\r\nexport default Dialog;","import React, { useEffect } from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { getDialogsDataTC } from '../../../../redux/chatsPageReducer';\r\nimport Dialog from './Dialog/Dialog';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    useEffect(()=>{\r\n        props.getDialogsDataTC(1, 10)\r\n    },[])\r\n    let urlForDialog = props.device === \"mobile\" ?  \"/chats/messages/\" : \"/chats/\"\r\n    return (\r\n        <div className=\"col-md-4\">\r\n            <div className={s.dialogs}>\r\n                <div className={s.header}>\r\n                    <h2 className={s.title}>Messages</h2>\r\n                    <div className={s.search_wrapper}>\r\n                        <input type=\"text\" className={s.search} placeholder=\"Search\" />\r\n                        <a href=\"#s\" className={s.search_btn} ><i className=\"fa fa-search\"></i></a>\r\n                    </div>\r\n                </div>\r\n                <div className={s.dialog_wrapper}>\r\n                    {props.dialogs_data.map(dialog =>(\r\n                        <Dialog key={Math.random() * 10} dialog={dialog} url={urlForDialog} />\r\n                    ))}       \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStoreToProps = (state) => (\r\n    {dialogs_data: state.chats_page.dialogs_data,\r\n    device:state.app.device})\r\n \r\nexport default compose(connect(mapStoreToProps,{getDialogsDataTC,}),withRouter,)(Dialogs);","import React from 'react';\r\nimport s from './NewMessage.module.css'\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nconst NewMessage = (props) => {\r\n    return (\r\n        <form className={s.wrapper} onSubmit={props.handleSubmit}>\r\n            <div className={s.smile_icons}>\r\n                <i className=\"fa fa-smile-o\"></i>\r\n                <i className=\"fa fa-paperclip\"></i>\r\n            </div>\r\n            <Field name={\"newMessText\"} component={\"textarea\"} className={s.message} />\r\n            <button className={s.send}><i className=\"material-icons\">send</i></button>\r\n        </form>\r\n    );\r\n};\r\n\r\n\r\nexport default reduxForm({ form: 'NewMessageForm' })(NewMessage);","import React from 'react';\r\nimport { addMess } from '../../../../../redux/chatsPageReducer';\r\nimport { connect } from 'react-redux';\r\nimport NewMessage from './NewMessage';\r\nimport { reset } from 'redux-form';\r\n\r\nconst NewMessageContainer = (props)=> {\r\n    const onAddMess = (values) => {\r\n        props.addMess(values.newMessText);\r\n        props.reset('NewMessageForm');\r\n    }\r\n     return <NewMessage onSubmit={onAddMess} />\r\n};\r\n\r\n\r\n\r\nexport default connect(null, { addMess, reset })(NewMessageContainer);","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={`${s.message_wrapper}`}>\r\n        <div className={`${s.my_message}`} >\r\n            <p className={s.text}>{props.message.text}\r\n            <i className=\"fa fa-trash-o\" onClick={() => props.mess_delete(props.message.id)}></i>\r\n            </p>\r\n            <div className={s.img_and_date}>\r\n                <img src={props.message.imgUrl} alt=\"User-img\" className={s.mes_img} />\r\n                <p className={s.date}>{props.message.date}\r\n                    \r\n                </p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n};\r\nexport default Message;\r\n","import React, { PureComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Message from './Message';\r\nimport { delMess } from '../../../../../redux/chatsPageReducer';\r\n\r\nconst MessageContainer = (props)=>(\r\n    <Message mess_delete={props.delMess} message={props.message}/>\r\n)\r\n\r\nexport default connect(null, {delMess})(MessageContainer);","import React from 'react';\r\nimport s from './MessagesHeader.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst MesagesHeader = (props) => {\r\n    return (\r\n        <div className={s.header}>\r\n            <NavLink className={s.profile} to={`/profile/${+ props.user_id}`}>\r\n                <img src={props.imgUrl} alt=\"User_img\" className={s.user_img} />\r\n            </NavLink>\r\n            <div className=\"nmd\">\r\n                <NavLink to={`/profile/${+ props.user_id}`} className={s.name}>{props.name}</NavLink>\r\n                <p className={s.date}>{props.date}</p>\r\n            </div>\r\n            <div className={s.others}>\r\n                <i className=\"fa fa-phone\"></i>\r\n                <i className=\"fa fa-trash-o\"></i>\r\n                <i className=\"fa fa-photo\"></i>\r\n                <i className=\"fa fa-cog\"></i>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MesagesHeader;","import React from 'react';\r\nimport MessagesHeader from './MessagesHeader';\r\nimport { compose } from 'redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {  getMessagesDataTC } from '../../../../../redux/chatsPageReducer';\r\n\r\nconst MesagesHeaderContainer = (props) => {\r\n    return <MessagesHeader name={props.name}\r\n        imgUrl={props.imgUrl} date={props.date}\r\n        user_id={props.user_id} />\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        name: state.chats_page.mes_header_data.fullName,\r\n        user_id: state.chats_page.mes_header_data.userId,\r\n        imgUrl: \"https://baturevich.ru/images/cn/user2.jpg\",\r\n        date: \"Last seen today at 3:40 PM\",\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getMessagesDataTC }), withRouter)(MesagesHeaderContainer)","import React from 'react';\r\nimport s from './Messages.module.css';\r\nimport NewMessageContainer from './NewMessage/NewMessageContainer';\r\nimport MessageContainer from './Message/MessageContainer';\r\nimport MesagesHeaderContainer from './MessagesHeader/MessagesHeaderContainer';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Messages = (props) => {\r\n    return (\r\n        <div className=\"col-md-8\">\r\n            <div className={s.messages}>\r\n                <MesagesHeaderContainer/>\r\n                <div className={s.all_mes}>\r\n                {props.chats_page.messages_data.map(message =>(\r\n                    <MessageContainer key={Math.random()*10} message={message} />\r\n                ))}        \r\n                </div>    \r\n                <NewMessageContainer/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nlet mapStateToProps = (state) => ({chats_page: state.chats_page})\r\n\r\nexport default connect(mapStateToProps,{})(Messages);","import React from 'react';\r\nimport Messages from './Messages';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { getMessagesDataTC } from '../../../../redux/chatsPageReducer';\r\nimport Preloader from '../../../common/Preloader/Preloader';\r\nimport { useEffect } from 'react';\r\n\r\nconst Messages_Container = (props) => {\r\n    useEffect(() => {\r\n        props.getMessagesDataTC(props.match.params.user_id);\r\n    }, [])\r\n    useEffect(() => {\r\n        props.getMessagesDataTC(props.match.params.user_id);\r\n    }, [props.match.params.user_id])\r\n\r\n    return props.isLoading\r\n        ? <div className=\"col-md-8\"><Preloader /></div>\r\n        : <Messages />\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoading: state.chats_page.isLoading,\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, { getMessagesDataTC }),\r\n    withRouter,\r\n)(Messages_Container)","import React from 'react';\r\nimport s from './Chats.module.css';\r\nimport Dialogs from './Dialogs/Dialogs';\r\nimport { Route } from 'react-router-dom';\r\nimport Messages_Container from './Messages/Messages_Container';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nconst Chats = (props) => {\r\n    const getPathForMessages = () => {     \r\n        if (props.device === \"mobile\") {\r\n            return \"/chats/messages/:user_id\"\r\n        } return \"/chats/:user_id\"\r\n    }\r\n    return (\r\n        <div className={s.chats}>\r\n            <div className=\"row\">\r\n                {props.device === \"mobile\"\r\n                    ? <Route exact path=\"/chats\" render={() => <Dialogs />} />\r\n                    : <Dialogs />\r\n                }\r\n                <Route path={getPathForMessages()}\r\n                    render={() => <Messages_Container />} />\r\n                <Route exact path={props.device == \"mobile\" ? \"/messages\" : \"/chats\"}>\r\n                    <h1 className={s.preview}>Start messaging...</h1>\r\n                </Route>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n};\r\nconst mapStateToProps = (state) => ({ device: state.app.device })\r\nexport default connect(mapStateToProps, {})(Chats);"],"sourceRoot":""}