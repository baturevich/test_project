{"version":3,"sources":["components/Contents/Chats/Chats.module.css","components/Contents/Chats/Dialogs/Dialogs.module.css","components/Contents/Chats/Dialogs/Dialog/Dialog.module.css","components/Contents/Chats/Messages/Messages.module.css","components/Contents/Chats/Messages/New_Message/New_Message.module.css","components/Contents/Chats/Messages/Message/Message.module.css","components/Contents/Chats/Messages/Mes_Header/Mes_Header.module.css","components/Contents/Chats/Dialogs/Dialog/Dialog.jsx","components/Contents/Chats/Dialogs/Dialogs.jsx","components/Contents/Chats/Messages/New_Message/New_Message.jsx","components/Contents/Chats/Messages/New_Message/New_message_Container.jsx","components/Contents/Chats/Messages/Message/Message.jsx","components/Contents/Chats/Messages/Message/Message_Container.jsx","components/Contents/Chats/Messages/Mes_Header/Mes_header.jsx","components/Contents/Chats/Messages/Mes_Header/Mes_header_Container.jsx","components/Contents/Chats/Messages/Messages.jsx","components/Contents/Chats/Messages/Messages_Container.jsx","components/Contents/Chats/Chats.jsx"],"names":["module","exports","Dialog","React","memo","props","to","url","dialog","id","className","s","src","photos","small","alt","user_img","online","name_and_mess","name","mess","compose","connect","state","dialogs_data","chats_page","device","app","getDialogsDataTC","withRouter","useEffect","urlForDialog","dialogs","header","title","search_wrapper","type","search","placeholder","href","search_btn","dialog_wrapper","map","key","Math","random","New_MessageFormRedux","reduxForm","form","wrapper","onSubmit","handleSubmit","smile_icons","Field","component","message","send","New_Message_Container","onAddMess","values","addMessAC","newMessText","reset","New_Message","this","Component","Message","message_wrapper","my_message","text","onClick","mess_delete","img_and_date","imgUrl","mes_img","date","delMessAC","Mes_Header","profile","user_id","others","mes_header_data","fullName","userId","getMessagesDataTC","messages","all_mes","messages_data","isLoading","match","params","Preloader","chats","exact","path","render","preview"],"mappings":"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","file":"static/js/3.c46e4ea2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chats\":\"Chats_chats__2lSIO\",\"preview\":\"Chats_preview__OHt4G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2YYaa\",\"header\":\"Dialogs_header__3x7sn\",\"title\":\"Dialogs_title__2yQ1e\",\"search\":\"Dialogs_search__InImK\",\"search_wrapper\":\"Dialogs_search_wrapper__uURmb\",\"search_btn\":\"Dialogs_search_btn__133YZ\",\"dialog_wrapper\":\"Dialogs_dialog_wrapper__2dBiG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__1P422\",\"user_img\":\"Dialog_user_img__UCDGQ\",\"name\":\"Dialog_name__Oy40J\",\"mess\":\"Dialog_mess__2dF7E\",\"online\":\"Dialog_online__2tT0A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__2mvS8\",\"all_mes\":\"Messages_all_mes__1izro\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"New_Message_wrapper__2erIj\",\"message\":\"New_Message_message__wK7Qa\",\"smile_icons\":\"New_Message_smile_icons__31wZI\",\"send\":\"New_Message_send__1EtRt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message_wrapper\":\"Message_message_wrapper__3sMNR\",\"message\":\"Message_message__20jpc\",\"my_message\":\"Message_my_message__2SWrb\",\"text\":\"Message_text__BNqp4\",\"img_and_date\":\"Message_img_and_date__1atf8\",\"date\":\"Message_date__1XPKB\",\"mes_img\":\"Message_mes_img__2sZAU\",\"del_btn\":\"Message_del_btn__3ZpEb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Mes_Header_header__1ajvg\",\"user_img\":\"Mes_Header_user_img__3wDIt\",\"name\":\"Mes_Header_name__f-xYr\",\"date\":\"Mes_Header_date__1DroI\",\"others\":\"Mes_Header_others__3WaE8\"};","import React from 'react';\r\nimport s from './Dialog.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Dialog = React.memo((props) => {\r\n\r\n    return <NavLink to={props.url + props.dialog.id} >\r\n        <div className={s.dialog} >\r\n            <img src={props.dialog.photos.small ||  \"https://baturevich.ru/images/cn/user2.jpg\"}\r\n                alt=\"User-img\" className={`${s.user_img} ${s.online}`} />\r\n            <div className={s.name_and_mess}>\r\n                <p className={s.name}>{props.dialog.name}</p>\r\n                <p className={s.mess}>Lorem, ipsum dolor sit amet consectetu...</p>\r\n            </div>\r\n        </div>\r\n    </NavLink>\r\n});\r\nexport default Dialog;","import React, { useEffect } from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { getDialogsDataTC } from '../../../../redux/chatsPageReducer';\r\nimport Dialog from './Dialog/Dialog';\r\n\r\nconst Dialogs = (props) => {\r\n    useEffect(()=>{\r\n        props.getDialogsDataTC(1, 10)\r\n    },[])\r\n    let urlForDialog = props.device === \"mobile\" ?  \"/chats/messages/\" : \"/chats/\"\r\n    return (\r\n        <div className=\"col-md-4\">\r\n            <div className={s.dialogs}>\r\n                <div className={s.header}>\r\n                    <h2 className={s.title}>Messages</h2>\r\n                    <div className={s.search_wrapper}>\r\n                        <input type=\"text\" className={s.search} placeholder=\"Search\" />\r\n                        <a href=\"#s\" className={s.search_btn} ><i className=\"fa fa-search\"></i></a>\r\n                    </div>\r\n                </div>\r\n                <div className={s.dialog_wrapper}>\r\n                    {props.dialogs_data.map(dialog =>(\r\n                        <Dialog key={Math.random() * 10} dialog={dialog} url={urlForDialog} />\r\n                    ))}       \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStoreToProps = (state) => (\r\n    {dialogs_data: state.chats_page.dialogs_data,\r\n    device:state.app.device})\r\n \r\nexport default compose(connect(mapStoreToProps,{getDialogsDataTC,}),withRouter,)(Dialogs);","import React from 'react';\r\nimport s from './New_Message.module.css'\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nconst New_MessageForm = (props) => {\r\n    return (\r\n        <form className={s.wrapper} onSubmit={props.handleSubmit}>\r\n            <div className={s.smile_icons}>\r\n                <i className=\"fa fa-smile-o\"></i>\r\n                <i className=\"fa fa-paperclip\"></i>\r\n            </div>\r\n            <Field name={\"newMessText\"} component={\"textarea\"} className={s.message} />\r\n            <button className={s.send}><i className=\"material-icons\">send</i></button>\r\n        </form>\r\n    );\r\n};\r\n\r\nlet New_MessageFormRedux = reduxForm({ form: 'New_MessageForm' })(New_MessageForm);\r\n\r\nexport default New_MessageFormRedux;","import React from 'react';\r\nimport { addMessAC } from '../../../../../redux/chatsPageReducer';\r\nimport { connect } from 'react-redux';\r\nimport New_MessageFormRedux from './New_Message';\r\nimport { reset } from 'redux-form';\r\n\r\nclass New_Message_Container extends React.Component {\r\n    onAddMess = (values) => {\r\n        this.props.addMessAC(values.newMessText);\r\n        this.props.reset('New_MessageForm');\r\n    }\r\n    render() {\r\n        return <New_MessageFormRedux onSubmit={this.onAddMess} />\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default connect(null, { addMessAC, reset })(New_Message_Container);","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={`${s.message_wrapper}`}>\r\n        <div className={`${s.my_message}`} >\r\n            <p className={s.text}>{props.message.text}\r\n            <i className=\"fa fa-trash-o\" onClick={() => props.mess_delete(props.message.id)}></i>\r\n            </p>\r\n            <div className={s.img_and_date}>\r\n                <img src={props.message.imgUrl} alt=\"User-img\" className={s.mes_img} />\r\n                <p className={s.date}>{props.message.date}\r\n                    \r\n                </p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n};\r\nexport default Message;\r\n","import React, { PureComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Message from './Message';\r\nimport { delMessAC } from '../../../../../redux/chatsPageReducer';\r\n\r\nconst Message_Container = (props)=>(\r\n    <Message mess_delete={props.delMessAC} message={props.message}/>\r\n)\r\n\r\nexport default connect(null, {delMessAC})(Message_Container);","import React from 'react';\r\nimport s from './Mes_Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Mes_Header = (props) => {\r\n    return (\r\n        <div className={s.header}>\r\n            <NavLink className={s.profile} to={`/profile/${+ props.user_id}`}>\r\n                <img src={props.imgUrl} alt=\"User_img\" className={s.user_img} />\r\n            </NavLink>\r\n            <div className=\"nmd\">\r\n                <NavLink to={`/profile/${+ props.user_id}`} className={s.name}>{props.name}</NavLink>\r\n                <p className={s.date}>{props.date}</p>\r\n            </div>\r\n            <div className={s.others}>\r\n                <i className=\"fa fa-phone\"></i>\r\n                <i className=\"fa fa-trash-o\"></i>\r\n                <i className=\"fa fa-photo\"></i>\r\n                <i className=\"fa fa-cog\"></i>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Mes_Header;","import React from 'react';\r\nimport Mes_Header from './Mes_header';\r\nimport { compose } from 'redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { addMessAC, getMessagesDataTC } from '../../../../../redux/chatsPageReducer';\r\n\r\nconst Mes_header_Container = (props) => {\r\n    return <Mes_Header name={props.name}\r\n        imgUrl={props.imgUrl} date={props.date}\r\n        user_id={props.user_id} />\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        name: state.chats_page.mes_header_data.fullName,\r\n        user_id: state.chats_page.mes_header_data.userId,\r\n        imgUrl: \"https://baturevich.ru/images/cn/user2.jpg\",\r\n        date: \"Last seen today at 3:40 PM\",\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { addMessAC, getMessagesDataTC }), withRouter)(Mes_header_Container)","import React from 'react';\r\nimport s from './Messages.module.css';\r\nimport New_Message_Container from './New_Message/New_message_Container';\r\nimport Message_Container from './Message/Message_Container';\r\nimport Mes_header_Container from './Mes_Header/Mes_header_Container';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Messages = (props) => {\r\n    return (\r\n        <div className=\"col-md-8\">\r\n            <div className={s.messages}>\r\n                <Mes_header_Container/>\r\n                <div className={s.all_mes}>\r\n                {props.chats_page.messages_data.map(message =>(\r\n                    <Message_Container key={Math.random()*10} message={message} />\r\n                ))}        \r\n                </div>    \r\n                <New_Message_Container/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nlet mapStateToProps = (state) => ({chats_page: state.chats_page})\r\n\r\nexport default connect(mapStateToProps,{})(Messages);","import React from 'react';\r\nimport Messages from './Messages';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { getMessagesDataTC } from '../../../../redux/chatsPageReducer';\r\nimport Preloader from '../../../common/Preloader/Preloader';\r\nimport { useEffect } from 'react';\r\n\r\nconst Messages_Container = (props) => {\r\n    useEffect(() => {\r\n        props.getMessagesDataTC(props.match.params.user_id);\r\n    }, [])\r\n    useEffect(() => {\r\n        props.getMessagesDataTC(props.match.params.user_id);\r\n    }, [props.match.params.user_id])\r\n\r\n    return props.isLoading\r\n        ? <div className=\"col-md-8\"><Preloader /></div>\r\n        : <Messages />\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoading: state.chats_page.isLoading,\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, { getMessagesDataTC }),\r\n    withRouter,\r\n)(Messages_Container)","import React from 'react';\r\nimport s from './Chats.module.css';\r\nimport Dialogs from './Dialogs/Dialogs';\r\nimport { Route } from 'react-router-dom';\r\nimport Messages_Container from './Messages/Messages_Container';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nconst Chats = (props) => {\r\n    const getPathForMessages = () => {     \r\n        if (props.device === \"mobile\") {\r\n            return \"/chats/messages/:user_id\"\r\n        } return \"/chats/:user_id\"\r\n    }\r\n    return (\r\n        <div className={s.chats}>\r\n            <div className=\"row\">\r\n                {props.device == \"mobile\"\r\n                    ? <Route exact path=\"/chats\" render={() => <Dialogs />} />\r\n                    : <Dialogs />\r\n                }\r\n                <Route path={getPathForMessages()}\r\n                    render={() => <Messages_Container />} />\r\n                <Route exact path={props.device == \"mobile\" ? \"/messages\" : \"/chats\"}>\r\n                    <h1 className={s.preview}>Start messaging...</h1>\r\n                </Route>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n};\r\nconst mapStateToProps = (state) => ({ device: state.app.device })\r\nexport default connect(mapStateToProps, {})(Chats);"],"sourceRoot":""}