{"version":3,"sources":["redux/usersPageReducer.ts","components/common/AppPreloader/AppPreloader.module.css","components/Contents/Profile/Profile.module.css","components/Contents/Profile/ProfileContent/ProfilePosts/ProfilePosts.module.css","API/Api.js","components/Contents/Profile/ProfileContent/ProfileLeftSide/ProfileLeftSide.module.css","assets/Loading.gif","components/common/Preloader/Preloader.module.css","components/main/Navigation/Navigation.module.css","components/Contents/Profile/ProfileContent/ProfilePosts/ProfilePost/ProfilePost.module.css","components/main/Login/Login.module.css","components/main/Header/Header.module.css","redux/headerReducer.ts","redux/authReducer.ts","redux/appReducer.ts","redux/profilePageReducer.ts","redux/store.ts","utils/validators.js","components/common/FormControls/FormLoginControl.jsx","components/main/Login/Login.jsx","components/common/AppPreloader/AppPreloader.jsx","components/Contents/Profile/ProfileContent/ProfilePosts/ProfileNewPost/ProfileNewPost.jsx","components/Contents/Profile/ProfileContent/ProfilePosts/ProfileNewPost/ProfileNewPostContainer.jsx","components/Contents/Profile/ProfileContent/ProfilePosts/ProfilePost/ProfilePost.jsx","components/Contents/Profile/ProfileContent/ProfilePosts/ProfilePost/ProfilePostContainer.jsx","components/Contents/Profile/ProfileContent/ProfilePosts/ProfilePosts.jsx","components/Contents/Profile/ProfileContent/ProfileLeftSide/ProfileLeftSide.jsx","components/Contents/Profile/ProfileContent/ProfileContent.jsx","components/Contents/Profile/ProfileHeader/ProfileStatus.jsx","components/Contents/Profile/ProfileHeader/Profileinfo/EditProfileInfo.jsx","components/Contents/Profile/ProfileHeader/Profileinfo/Profilejnfo.jsx","redux/selectors.ts","components/Contents/Profile/ProfileHeader/ProfilePhoto.jsx","components/Contents/Profile/ProfileHeader/ProfileCounter.jsx","components/Contents/Profile/ProfileHeader/ProfileHeader.jsx","components/Contents/Profile/ProfileHeader/ProfileHeaderContainer.jsx","utils/isAuthUserPage.js","components/Contents/Profile/Profile.jsx","components/common/HOComponents/withSuspense.jsx","components/main/Content/StartScreen.jsx","components/main/Content/Content.jsx","components/main/Header/Header.tsx","components/main/Header/HeaderContainer.tsx","components/main/Navigation/Navigation.tsx","components/main/Navigation/NavigationContainer.tsx","components/main/SocNet.jsx","components/common/GlobalError/GlobalError.jsx","App.jsx","index.js","components/Contents/Profile/ProfileContent/ProfilePosts/ProfileNewPost/ProfileNewPost.module.css","components/Contents/Profile/ProfileHeader/ProfileHeader.module.scss","components/main/Content/Content.module.scss","utils/GetCurrentDate/GetCurrentDate.js","components/common/FormControls/FormLoginConrol.module.css","components/common/GlobalError/GlobalError.module.css","redux/chatsPageReducer.ts","components/common/Preloader/Preloader.jsx"],"names":["initialState","users","pageSize","totalUsersCount","currentPage","isLoading","followInProgress","follow","user_id","type","unfollow","answer","toggleInFollowProgress","getUsersTC","page","dispatch","a","current_page","UserAPI","getUsers","data","items","user_count","totalCount","followTC","FollowAPI","resultCode","unFollowTC","userPageReducer","state","action","map","u","id","followed","filter","module","exports","instance","Axios","create","withCredentials","baseURL","headers","get","then","response","post","delete","ProfileAPI","getProfileData","getStatusData","upStatusData","status","put","upProfileInfo","profile_data","uploadPhoto","photo","formData","FormData","append","AuthAPI","getAuthData","authorize","login_data","deAuthorize","getCaptchaURL","header_data","name","imgUrl","headerReducer","photos","isAuth","captcha_url","setAuthData","getAuthDataTC","auth_data","reqAuthPhoto","authReducer","initialized","device","global_errors","appReducer","error","ADD_POST","isSetProfileData","user_data","status_data","posts_data","profileIsLoading","setStatusData","getProfileDataTC","getStatusDataTC","upStatusDataTC","new_status_data","message","profilePageReducer","post_text","newPost","length","fullName","date","GetCurrentDate","text","small","likeCounts","commentCounts","p","post_id","rootReducer","combineReducers","profile_page","chats_page","chatsPageReducer","header","users_page","app","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","maxLength","requiared","value","InputLoginControl","input","meta","props","hasError","touched","className","s","formControl","Login","onSubmit","loginTC","result_code","history","push","login","offer","LoginReduxForm","this","captchaUrl","React","Component","maxLength50","reduxForm","form_wrapper","form_login","handleSubmit","login_title","inputs","Field","placeholder","component","validate","check","some_error","captcha","src","alt","buttons","href","forgout","connect","auth_user_id","url","stopSubmit","_error","messages","withRouter","AppPreloader","wrapper","NewProfilePostFormRedux","user_img","btn_group","btn","ProfileNewPost","content","preview","title","onAddPost","addPost","reset","values","newPostText","ProfilePost","useState","likesCount","setlikesCount","post_data","name_and_date","onClick","deletePostAC","post_content","text_content","like_block","like_btn","like_btn_active","komments_btn","deletePost","reverse","key","Math","random","ProfileLeftSide","ProfileContent","isAuthUserProfile","match","params","editMode","setEditMode","setStatus","useEffect","onChange","e","currentTarget","autoFocus","onBlur","onDoubleClick","edit_mode","user_features","user_data_names","contacts_block","Object","keys","contacts","edit_mode_inputs","switch","slider","save_edit_info","ProfileInfo","viewMoreInfo","isOwner","more_info","initialValues","updateProfileInfoTC","features_list","contacts_item","answers_list","aboutMe","lookingForAJob","hide_more","setViewMoreInfo","show_more","getProfileUserData","uploadPhotoTC","settingPhoto","setSettingPhoto","profile__item","profile__item_img_block","setting_photo","setting_text","large","profile__img","upload_photo","target","files","ProfileCounter","short_data_content","main_info_item","profile_data__number","music_count","videos_count","followers_count","ProfileHeader","profile__info","assets","edit_btn","toggleEditMode","button_group","to","userId","main_info","profile__name","getState","url_user_id","Preloader","profile","withSuspense","Suspense","fallback","StartScreenEng","startScreen","chgLanguage","setlng","startScreen_text","StartScreenRus","StartScreen","lng","started","Chats","lazy","Users","path","render","Profile","Header","header__wrapper","header__logo","input_wrapper","search_input","search_btn","user_ungle","user_notification","profile_name","profile_img","profile_img_none","logout","deLoginTC","Navigation","menu","menu__item","menu__link","SocNet","GlobalError","showError","prevProps","prevState","setState","currentError","App","initializeTC","innerWidth","ReactDOM","document","getElementById","data_type","fmonth","now","Date","day","getDate","month","getMonth","hour","getHours","minutes","getMinutes","dialogs_data","messages_data","mes_header_data","addMess","mess_text","delMess","mess_id","getDialogsDataTC","page_size","getMessagesDataTC","mes_data","new_mess","m","preloader","loadImg"],"mappings":"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","file":"static/js/main.3f174875.chunk.js","sourcesContent":["import { PhotosType} from './authReducer';\r\nimport { UserAPI, FollowAPI } from \"../API/Api\";\r\n\r\n//Actions\r\nconst FOLLOW = \"FOLLOW\"\r\nconst UNFOLLOW = \"UNFOLLOW\"\r\nconst SET_USERS = \"SET_USERS\"\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\"\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\"\r\nconst IS_LOADING = \"IS_LOADING\"\r\nconst TOGGLE_FOLLOW_PROGRESS = \"TOGGLE_FOLLOW_PROGRESS\"\r\n\r\ntype UsersType ={\r\n    name: string, id: number, uniqueUrlName: string | null, \r\n    photos: PhotosType, status:string, followed: boolean \r\n}\r\nlet initialState = {\r\n    users: [] as Array<UsersType>,\r\n    pageSize: 10,\r\n    totalUsersCount:0,\r\n    currentPage: 1,\r\n    isLoading: false,\r\n    followInProgress: [] as Array<UsersType>,\r\n};\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst userPageReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW:{\r\n            return{\r\n                ...state,\r\n                users: state.users.map(u =>{\r\n                    if(u.id === action.user_id){\r\n                       return{...u, followed:true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        }\r\n        case UNFOLLOW:{\r\n            return{\r\n                ...state,\r\n                users: state.users.map(u =>{\r\n                    if(u.id === action.user_id){\r\n                       return{...u, followed:false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        }\r\n        case SET_USERS:{\r\n            return{...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE:{\r\n            return{...state, currentPage: action.current_page}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT:{\r\n            return{...state, totalUsersCount: action.user_count}\r\n        }\r\n        case IS_LOADING:{\r\n            return{...state, isLoading: action.answer}\r\n        }\r\n        case TOGGLE_FOLLOW_PROGRESS:{\r\n            return{\r\n                ...state, \r\n                followInProgress : action.answer === true\r\n                ? [...state.followInProgress, action.user_id]\r\n                : [state.followInProgress.filter(id => id != action.user_id)]\r\n            }\r\n        }\r\n         default :{\r\n            return state\r\n        }\r\n    };\r\n};\r\n\r\n// Action Creators\r\n\r\ntype FollowType = {type: typeof FOLLOW, user_id: number}\r\nexport const follow = (user_id:number): FollowType => ({type: FOLLOW, user_id: user_id});\r\n\r\ntype UnfollowType = {type :typeof UNFOLLOW, user_id: number}\r\nexport const unfollow = (user_id:number): UnfollowType => ({type: UNFOLLOW, user_id: user_id});\r\n\r\ntype SetUserType = {type:typeof SET_USERS, users: UsersType }\r\nexport const setUsers = (users:UsersType): SetUserType => ({type: SET_USERS, users: users});\r\n\r\ntype SetCurrentPageType = {type: typeof SET_CURRENT_PAGE, current_page: number }\r\nexport const setCurrentPage = (current_page:number): SetCurrentPageType => (\r\n    {type: SET_CURRENT_PAGE, current_page});\r\n\r\ntype SetTotalUsersCountType = {type: typeof SET_TOTAL_USERS_COUNT, user_count: number}\r\nexport const setTotalUsersCount = (user_count:number): SetTotalUsersCountType => (\r\n    {type: SET_TOTAL_USERS_COUNT , user_count});\r\n\r\n\r\ntype IsLoadingType  ={type: typeof IS_LOADING, answer: boolean}\r\nexport const isLoading = (answer: boolean): IsLoadingType => ({type: IS_LOADING, answer});\r\n\r\ntype ToggleInFollowProgressType = {type: typeof TOGGLE_FOLLOW_PROGRESS, answer: boolean, user_id: number }\r\nexport const toggleInFollowProgress = (answer:boolean, user_id: number): ToggleInFollowProgressType =>(\r\n    {type: TOGGLE_FOLLOW_PROGRESS, answer, user_id});\r\n\r\n\r\n//Thunks Creators\r\nexport const getUsersTC = (page:number, pageSize:number,) =>{\r\n    return async (dispatch: any) =>{\r\n        dispatch(isLoading(true))\r\n        dispatch(setCurrentPage(page))\r\n        let data = await UserAPI.getUsers(page, pageSize)\r\n        dispatch(isLoading(false))\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nexport const followTC = (user_id:number) =>{\r\n    return async(dispatch: any) =>{\r\n        dispatch(toggleInFollowProgress(true, user_id));\r\n        let response = await FollowAPI.follow(user_id)\r\n\r\n        if (response.data.resultCode == 0) {\r\n            dispatch(follow(user_id))\r\n            dispatch(toggleInFollowProgress(false, user_id))\r\n        }      \r\n    }\r\n}\r\nexport const unFollowTC = (user_id:number) =>{\r\n    return async(dispatch: any) =>{\r\n        dispatch(toggleInFollowProgress(true, user_id));\r\n        let response = await FollowAPI.unfollow(user_id)\r\n\r\n        if (response.data.resultCode == 0) {\r\n            dispatch(unfollow(user_id))\r\n            dispatch(toggleInFollowProgress(false, user_id))\r\n        }\r\n    }\r\n}\r\n\r\nexport default userPageReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AppPreloader_wrapper__1IFKV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1rxT_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfilePosts_content__2kW2o\"};","import Axios from 'axios'\r\n\r\nconst instance = Axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers:{\r\n        'API-KEY': '28997550-8233-4ca6-9877-0023cdccb20d',\r\n    },\r\n})\r\nexport const UserAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n        .then(response=>{\r\n            return response.data\r\n        })\r\n    }\r\n\r\n};\r\n\r\nexport const FollowAPI = {\r\n    follow(user_id){\r\n        return instance.post(`follow/${user_id}`, {},)\r\n            \r\n    },\r\n    unfollow(user_id){\r\n        return instance.delete(`follow/${user_id}`,)\r\n    },\r\n};\r\n\r\nexport const ProfileAPI ={\r\n    getProfileData(user_id){\r\n        return instance.get(`profile/${+user_id}`)\r\n    },\r\n    getStatusData(user_id){\r\n        return instance.get(`profile/status/${+ user_id}`)\r\n    },\r\n    upStatusData(status){\r\n        return instance.put(`profile/status`,{status})\r\n    },\r\n    upProfileInfo(profile_data){\r\n\r\n        return instance.put(`profile`, profile_data)\r\n    },\r\n    uploadPhoto(photo){\r\n        let formData = new FormData();\r\n        formData.append(\"image\", photo)\r\n        return instance.put(`profile/photo`, formData ,{\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n              }\r\n        })\r\n    },\r\n};\r\n\r\nexport const AuthAPI = {\r\n    getAuthData(){\r\n        return instance.get(`auth/me`)\r\n    },\r\n    authorize(login_data){\r\n        return instance.post(`auth/login`, login_data)\r\n    },\r\n    deAuthorize(){\r\n        return instance.delete(`auth/login`,)\r\n    },\r\n    getCaptchaURL(){\r\n        return instance.get(`security/get-captcha-url`,)\r\n    }\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileLeftSide_content__3ANW1\"};","module.exports = __webpack_public_path__ + \"static/media/Loading.951c2859.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__jfMNu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Navigation_menu__1EJjN\",\"menu__item\":\"Navigation_menu__item__1J5Ui\",\"menu__link\":\"Navigation_menu__link__A88Oj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"ProfilePost_post__22p-a\",\"post_data\":\"ProfilePost_post_data__1U6ly\",\"user_img\":\"ProfilePost_user_img__1uiTD\",\"name\":\"ProfilePost_name__Y0HOz\",\"date\":\"ProfilePost_date__1pBEF\",\"action\":\"ProfilePost_action__2gNqA\",\"post_content\":\"ProfilePost_post_content__RXnXS\",\"like_block\":\"ProfilePost_like_block__1sjtp\",\"like_btn_active\":\"ProfilePost_like_btn_active__3uhxx\",\"like_btn\":\"ProfilePost_like_btn__Zzcic\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__3bPxu\",\"offer\":\"Login_offer__WLAZH\",\"form_login\":\"Login_form_login__nr26t\",\"login_title\":\"Login_login_title__1MPjn\",\"inputs\":\"Login_inputs__tbJQX\",\"buttons\":\"Login_buttons__3IptC\",\"forgout\":\"Login_forgout__4iE65\",\"check\":\"Login_check__32n45\",\"some_error\":\"Login_some_error__XErs1\",\"captcha\":\"Login_captcha__30_1C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Header_content__2lnE3\",\"header__wrapper\":\"Header_header__wrapper__MqtTW\",\"header__logo\":\"Header_header__logo__2ljTw\",\"input_wrapper\":\"Header_input_wrapper__3jdJO\",\"search_input\":\"Header_search_input__2HWV1\",\"search_btn\":\"Header_search_btn__2zlvg\",\"user_ungle\":\"Header_user_ungle__12o-m\",\"profile_img\":\"Header_profile_img__1x5z3\",\"profile_img_none\":\"Header_profile_img_none__1x01G\",\"profile_name\":\"Header_profile_name__3DdR8\",\"user_notification\":\"Header_user_notification__3ajAH\",\"logout\":\"Header_logout__3tfLP\"};","\r\ntype HeaderDataType = {id: number, name: string,  imgUrl: string,}\r\n\r\nlet initialState = {\r\n    header_data :{\r\n      id:1,\r\n      name: \"kirill\",\r\n      imgUrl: \"https://baturevich.ru/images/cn/user_img.jpg\",\r\n    } as HeaderDataType, \r\n};\r\ntype InitialStateType = typeof initialState;\r\nconst headerReducer = (state = initialState, action:any):InitialStateType=>{\r\n    return state;\r\n}\r\n\r\nexport default headerReducer;","import { stopSubmit } from 'redux-form';\r\nimport { AuthAPI, ProfileAPI } from \"../API/Api\";\r\n\r\n// Actions\r\nconst IS_LOADING = \"auth/IS_LOADING\";\r\nconst SET_AUTH_DATA = \"auth/SET_AUTH_DATA\";\r\nconst SET_AUTH_PHOTOS = \"auth/SET_AUTH_PHOTOS\"\r\nconst SET_AUTH_USER_DATA = \"auth/SET_AUTH_USER_DATA\";\r\nconst GET_CAPTCHA_URL_SUCCES = 'auth/GET_CAPTCHA_URL_SUCCES';\r\n\r\ntype DataType = {\r\n    id:  number,\r\n    login: string,\r\n    email: string,\r\n}\r\nexport type PhotosType = {\r\n    small: string,\r\n    large: string,\r\n}\r\nlet initialState = {\r\n    data :{} as DataType,\r\n    photos: {} as PhotosType,\r\n    isLoading: false,\r\n    isAuth: false,\r\n    captcha_url: null as string | null,\r\n};\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst authReducer = (state = initialState, action:any):InitialStateType => {\r\n    switch (action.type) {\r\n        case IS_LOADING:{\r\n            return{...state, isLoading: action.answer}\r\n        }\r\n        case SET_AUTH_USER_DATA :{\r\n            return{...state, data: action.auth_data, isAuth: true}\r\n        } \r\n        case GET_CAPTCHA_URL_SUCCES:{\r\n            return{...state, captcha_url: action.captcha_url }\r\n        } \r\n        case SET_AUTH_DATA:{\r\n            return{...state, isAuth: action.answer}\r\n        }\r\n        case SET_AUTH_PHOTOS:{\r\n            return{...state, photos: action.photos}\r\n        }\r\n         default :{\r\n            return state\r\n        }\r\n    };\r\n};\r\n\r\nexport const isAuth = ()=> (initialState.isAuth);\r\n// Action Creatos\r\n\r\ntype IsLoadingType  ={type: typeof IS_LOADING, answer: boolean}\r\nexport const isLoading = (answer: boolean): IsLoadingType => ({type: IS_LOADING, answer});\r\n\r\ntype SetAuthDataTtype = {type: typeof SET_AUTH_DATA, answer: boolean }\r\nexport const setAuthData = (answer: boolean):SetAuthDataTtype =>({type: SET_AUTH_DATA, answer});\r\n\r\ntype SetAuthPhotoType  ={ type: typeof SET_AUTH_PHOTOS, photos: PhotosType}\r\nexport const setAuthPhoto = (photos:PhotosType):SetAuthPhotoType => ({type: SET_AUTH_PHOTOS, photos});\r\n\r\ntype SetAuthUserDataType = {type: typeof SET_AUTH_USER_DATA, auth_data: DataType}\r\nexport const setAuthUserData = (auth_data: DataType):SetAuthUserDataType => (\r\n    {type: SET_AUTH_USER_DATA, auth_data});\r\n\r\ntype GetCaptchaUrlSuccesType ={type: typeof GET_CAPTCHA_URL_SUCCES, captcha_url: string}\r\nexport const getCaptchaUrlSucces = (captcha_url: string):GetCaptchaUrlSuccesType =>(\r\n    {type: GET_CAPTCHA_URL_SUCCES, captcha_url})\r\n\r\n\r\n// Thanks Creators\r\nexport const getAuthDataTC = () =>{\r\n    return async (dispatch:any)=>{\r\n     const response = await AuthAPI.getAuthData();\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(response.data.data));\r\n            dispatch(reqAuthPhoto(response.data.data.id));\r\n            return true\r\n        } return  false\r\n    }\r\n}\r\n\r\nexport const loginTC = (login_data: Object)=>{\r\n    return async (dispatch: any)=>{\r\n        dispatch(isLoading(true))\r\n       const response = await AuthAPI.authorize(login_data);\r\n         if (response.data.resultCode == 0) {\r\n            dispatch(isLoading(false));\r\n            dispatch(getAuthDataTC());\r\n\r\n        }\r\n        else {\r\n            if(response.data.resultCode == 10){\r\n               const response = await AuthAPI.getCaptchaURL()\r\n               dispatch(getCaptchaUrlSucces(response.data.url))\r\n            }\r\n            dispatch(stopSubmit(\"login\", { _error: response.data.messages[0] }));\r\n        }\r\n        return response.data.resultCode \r\n    }  \r\n}\r\nexport const reqAuthPhoto = (user_id: number ) =>{\r\n    return async (dispatch: any)=>{\r\n        const response  = await ProfileAPI.getProfileData(user_id)\r\n            dispatch(setAuthPhoto(response.data.photos))    \r\n    }\r\n}\r\nexport const deLoginTC = ()=>{\r\n    return async (dispatch:any)=>{\r\n       const response = await AuthAPI.deAuthorize()\r\n            if(response.data.resultCode == 0 ){\r\n                dispatch(setAuthData(false))\r\n            }             \r\n    }\r\n}\r\nexport default authReducer;","import { getAuthDataTC } from \"./authReducer\";\r\n\r\n//Actions\r\nconst INITIALIZATION_SUCCESSFUL = \"app/INITIALIZATION_SUCCESSFUL\";\r\nconst INITIALIZING_DEVICE = \"app/INITIALIZING_DEVICE\";\r\nconst SET_GLOBAL_ERROR = \"app/SET_GLOBAL_ERROR\";\r\n\r\n\r\ntype GlobalErrorsType = Array<{}>;\r\nexport type DeviceType =  \"desktop\" | \"mobile\"\r\n\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n    device: \"desktop\" as DeviceType ,\r\n    global_errors: [] as GlobalErrorsType ,\r\n};\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst appReducer = (state = initialState, action:any):InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZATION_SUCCESSFUL:{\r\n            return{...state, initialized: true}\r\n        }\r\n        case INITIALIZING_DEVICE:{\r\n            return{...state, device: action.answer}\r\n        }\r\n        case SET_GLOBAL_ERROR:{\r\n            return{ ...state, global_errors: [...state.global_errors, action.error]}\r\n        }\r\n        default :{return state}\r\n    };\r\n};\r\n\r\n//Action Creators\r\n\r\n\r\ntype IntializationSuccessfullACType = {type: typeof INITIALIZATION_SUCCESSFUL}\r\nexport const intializationSuccessfullAC = ():IntializationSuccessfullACType => ({type: INITIALIZATION_SUCCESSFUL});\r\n\r\ntype InitializingDeviceACType = {type: typeof INITIALIZING_DEVICE ,answer: string,}\r\nexport const initializingDeviceAC = (answer:string):InitializingDeviceACType => ({type: INITIALIZING_DEVICE, answer});\r\n\r\ntype SetGlobalErrorACType = {type: typeof SET_GLOBAL_ERROR, error: string }\r\nexport const setGlobalErrorAC = (error:string):SetGlobalErrorACType =>({type: SET_GLOBAL_ERROR, error});\r\n\r\n//Thunk Creators\r\nexport const initializeTC = () => async (dispatch:any)=>{\r\n        const promise = await dispatch(getAuthDataTC())\r\n        if(window.innerWidth < 768){\r\n            dispatch(initializingDeviceAC(\"mobile\"))\r\n        }\r\n        dispatch(intializationSuccessfullAC());\r\n    }\r\n\r\n\r\nexport default appReducer;","import { PhotosType } from './authReducer';\r\nimport { ProfileAPI } from \"../API/Api\";\r\nimport { GetCurrentDate } from \"../utils/GetCurrentDate/GetCurrentDate\";\r\nimport { stopSubmit } from \"redux-form\";\r\nimport { setGlobalErrorAC } from \"./appReducer\";\r\n\r\nconst ADD_POST = \"profile/ADD_POST\";\r\nconst IS_LOADING = \"profile/IS_LOADING\";\r\nconst DELETE_POST = \"profile/DELETE_POST\";\r\nconst SET_USER_DATA = \"profile/SET_USER_DATA\";\r\nconst SET_STATUS_DATA = \"profile/SET_STATUS_DATA\";\r\nconst SET_PROFILE_PHOTO = \"profile/SET_PROFILE_PHOTO\"\r\n\r\n//Types\r\ntype ContactsType = {\r\n    github: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n    website: string\r\n    youtube: string\r\n    mainLink: string\r\n}\r\ntype UserDataType ={\r\n    id: number, \r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string,\r\n    fullName: string,\r\n    contacts: ContactsType,\r\n    photos: PhotosType,\r\n}\r\ntype PostsDataType ={\r\n    id: string,name: string, date: string, text: string, imgUrl: string, likeCounts: number, commentCounts: number\r\n}\r\nexport type InitialStateType = typeof initialState;\r\n// State\r\nlet initialState =   {\r\n    isSetProfileData: false,\r\n    user_data: {} as UserDataType, \r\n    status_data: \"\", \r\n    posts_data:[] as Array<PostsDataType> , \r\n    isLoading: false,\r\n};\r\n\r\nconst profilePageReducer = (state = initialState, action:any):InitialStateType => {\r\n    switch (action.type) {\r\n        case IS_LOADING:{\r\n            return{...state, isLoading: action.answer}\r\n        }\r\n        case ADD_POST:{\r\n            let post_text = action.post_text;\r\n            let newPost = { \r\n                id: state.posts_data.length,\r\n                name: state.user_data.fullName,\r\n                date: GetCurrentDate(\"full_date\"),\r\n                text: post_text,\r\n                imgUrl: state.user_data.photos.small,\r\n                likeCounts: 0,\r\n                commentCounts: 0\r\n            };        \r\n            if(post_text !== ''){\r\n                return{\r\n                    ...state,\r\n                    posts_data: [...state.posts_data, newPost] as Array<PostsDataType>,\r\n                }   \r\n            }       \r\n        }\r\n        case DELETE_POST:{\r\n            return {\r\n                ...state,\r\n                posts_data: state.posts_data.filter(p => p.id != action.post_id)\r\n            }\r\n        }\r\n        case SET_USER_DATA:{\r\n            return {\r\n                ...state,\r\n                user_data: action.user_data,\r\n                isSetProfileData: true,\r\n            }\r\n        }\r\n        case SET_STATUS_DATA:{\r\n            return {\r\n                ...state,\r\n                status_data: action.status_data\r\n            }\r\n        }\r\n        case SET_PROFILE_PHOTO:{\r\n            return {\r\n                ...state,\r\n                user_data: {...state.user_data, photos: action.photos},\r\n\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\n// Action Creators\r\n\r\ntype ProfileIsLoadingType ={type: typeof IS_LOADING, answer: boolean}\r\nexport const profileIsLoading = (answer:boolean):ProfileIsLoadingType => ({type: IS_LOADING, answer});\r\n\r\ntype AddPostType = {type: typeof ADD_POST, post_text: string }\r\nexport const addPost = (post_text: string): AddPostType => ({type: ADD_POST, post_text});\r\n\r\ntype DeletePostType = {type: typeof DELETE_POST, post_id: number}\r\nexport const deletePost = (post_id: number): DeletePostType => ({type: DELETE_POST, post_id});\r\n\r\ntype SetUserDataType = {type: typeof SET_USER_DATA, user_data: UserDataType}\r\nexport const setUserData = (user_data: UserDataType): SetUserDataType => ({type: SET_USER_DATA, user_data});\r\n\r\ntype SetStatusDataType = {type: typeof SET_STATUS_DATA, status_data: string}\r\nexport const setStatusData = (status_data: string): SetStatusDataType => ({type: SET_STATUS_DATA, status_data});\r\n\r\ntype SetProfilePhotoType = {type: typeof SET_PROFILE_PHOTO, photos: PhotosType}\r\nexport const setProfilePhoto = (photos: PhotosType):SetProfilePhotoType =>({type:SET_PROFILE_PHOTO, photos })\r\n\r\n\r\n// Thanks Creators\r\nexport const getProfileDataTC = (user_id: number) =>{\r\n    return async(dispatch: any) =>{\r\n        dispatch(profileIsLoading(true))\r\n        if (user_id) {\r\n            let response = await ProfileAPI.getProfileData(user_id)\r\n            dispatch(setUserData(response.data))\r\n            dispatch(profileIsLoading(false))\r\n        }\r\n    }\r\n};\r\n\r\nexport const getStatusDataTC = (user_id: number)=>{\r\n    return async(dispatch: any) =>{\r\n       let response = await  ProfileAPI.getStatusData(user_id)\r\n        dispatch(setStatusData(response.data))\r\n    }\r\n};\r\n\r\nexport const upStatusDataTC = (new_status_data: string)=>{\r\n    return async (dispatch: any) =>{\r\n        try{\r\n            let response = await ProfileAPI.upStatusData(new_status_data)\r\n            if(response.data.resultCode == 0){\r\n                dispatch(setStatusData(new_status_data))\r\n            } \r\n        } catch(error){\r\n            dispatch(setGlobalErrorAC(error.message))\r\n        }      \r\n    }\r\n};\r\nexport const uploadPhotoTC = (photo:PhotosType) =>{\r\n    return async (dispatch: any)=>{\r\n        let response = await ProfileAPI.uploadPhoto(photo)\r\n        dispatch(setProfilePhoto(response.data.data.photos))\r\n    }\r\n}\r\nexport const updateProfileInfoTC = (data: UserDataType)=>{\r\n    return async (dispatch: any, getState: any)=>{\r\n        const user_id = getState().auth_data.data.id\r\n        let response = await ProfileAPI.upProfileInfo(data)\r\n        if(response.data.resultCode == 0){\r\n            dispatch(getProfileDataTC(user_id))\r\n        } else{\r\n            dispatch(stopSubmit(\"edit_profile_info\", { _error: response.data.messages[0] }));\r\n        }\r\n       \r\n    }\r\n}\r\nexport default profilePageReducer;","import { createStore, combineReducers, applyMiddleware,compose } from \"redux\";\r\nimport headerReducer from \"./headerReducer\";\r\nimport profilePageReducer from \"./profilePageReducer\";\r\nimport chatsPageReducer from \"./chatsPageReducer\";\r\nimport userPageReducer from \"./usersPageReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profile_page: profilePageReducer,\r\n    chats_page: chatsPageReducer,\r\n    header: headerReducer,\r\n    users_page: userPageReducer,\r\n    auth_data: authReducer,\r\n    app: appReducer,\r\n    form: formReducer,\r\n})\r\ntype RootReducerType = typeof rootReducer;\r\n\r\nexport type AppStateType = ReturnType<RootReducerType>;\r\n\r\n//@ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers( applyMiddleware(thunkMiddleware)))\r\n//@ts-ignore\r\nwindow.__store__ = store;\r\nexport default store;","export const requiared = (value)=>{\r\n    if(!value)  return \"This field is required\"\r\n    return undefined\r\n}\r\nexport const maxLength = (maxLength)=> (value) =>{\r\n    if(value.length > maxLength) return `Max length ${maxLength} sumbols` \r\n    return undefined\r\n}","import React from 'react';\r\nimport s from './FormLoginConrol.module.css'\r\n\r\nconst InputLoginControl = ({input, meta, ...props})=>{\r\n    const hasError = meta.touched && meta.error;\r\n    return(\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \" \")}>\r\n             { hasError && <span>{meta.error}</span>}\r\n            <input {...input} {...props} />\r\n        </div>\r\n    );\r\n}\r\nexport default InputLoginControl;","import React from 'react';\r\nimport s from './Login.module.css'\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { loginTC, setAuthData, } from '../../../redux/authReducer';\r\nimport { requiared, maxLength } from '../../../utils/validators';\r\nimport InputLoginControl from '../../common/FormControls/FormLoginControl';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass Login extends React.Component {\r\n    componentDidMount(){\r\n   \r\n        //Here this props:\r\n        // auth_user_id: undefined\r\n        // captchaUrl: null\r\n        // history: {length: 2, action: \"REPLACE\", location: {…}, createHref: ƒ, push: ƒ, …}\r\n        // location: {pathname: \"/login\", search: \"\", hash: \"\", state: undefined}\r\n        // loginTC: ƒ ()\r\n        // match: {path: \"/login\", url: \"/login\", isExact: true, params: {…}}\r\n        // state: {profile_page: {…}, chats_page: {…}, header: {…}, users_page: {…}, auth_data: {…}, …}\r\n        // staticContext:\r\n    }\r\n    onSubmit = (formData) => {\r\n        const login_data = { ...formData}\r\n        this.props.loginTC(login_data).then((result_code) => {\r\n                if (result_code === 0) {\r\n                    this.props.history.push(`/vision`)\r\n                }\r\n            })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={s.login}>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 col-xs-12\">\r\n                            <div className={s.offer}>\r\n                                <h1>Vision.com</h1>\r\n                                <p>Special for you</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-xs-12\">\r\n                            <LoginReduxForm onSubmit={this.onSubmit}  captchaUrl={this.props.captchaUrl} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst maxLength50 = maxLength(50);\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <div className={s.form_wrapper}>\r\n            <form className={s.form_login} onSubmit={props.handleSubmit}>\r\n                <h2 className={s.login_title}>Login</h2>\r\n\r\n                <div className={s.inputs}>\r\n                    <Field placeholder='login' name={'email'} type=\"email\"\r\n                        component={InputLoginControl} validate={[requiared, maxLength50]} />\r\n                    <Field placeholder='Password' name={'password'} type=\"password\"\r\n                        component={InputLoginControl} validate={[requiared, maxLength50]} />\r\n                </div>\r\n                <div className={s.check}>\r\n                    <Field type={'checkbox'} name={'rememberMe'} component={'input'} />\r\n                Remember Me\r\n                </div>\r\n                <div className={props.error && s.some_error}>\r\n                    <span>{props.error}</span>\r\n                </div>\r\n                { props.captchaUrl &&\r\n                    <div className={ s.captcha}>\r\n                    <img src={props.captchaUrl} alt=\"captcha\"/>\r\n                    <Field placeholder=\"Enter the captcha symbols...\" type={'text'} \r\n                        name={'captcha'} component={'input'} />\r\n                </div>\r\n                }\r\n                <div className={s.buttons}>\r\n                    <button>Log In</button>\r\n                    <button>Sign In</button>\r\n                </div>\r\n                <a href='##' className={s.forgout}>Forgout your passsword?</a>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\nconst mapStateToprops = (state) => {\r\n    return {\r\n        captchaUrl: state.auth_data.captcha_url,\r\n        auth_user_id: state.auth_data.data.id,\r\n    }\r\n}\r\nexport default compose(connect(mapStateToprops, { loginTC, setAuthData }),\r\n    withRouter,\r\n)(Login)","import React from 'react';\r\nimport s from './AppPreloader.module.css'\r\n\r\nconst AppPreloader = (props) => {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            {/* <h1>Vision.com</h1> */}\r\n        </div>\r\n    );\r\n}\r\nexport default AppPreloader;","import React from 'react';\r\nimport s from './ProfileNewPost.module.css';\r\nimport { reduxForm, Field } from 'redux-form';\r\n\r\n\r\nconst ProfileNewPost = (props) => {\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={s.preview}>\r\n                <h1 className={s.title}>Create Post</h1>\r\n            </div>\r\n            <NewProfilePostFormRedux {...props} onSubmit={props.onAddPost}/>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst NewProfilePostForm = (props)=>{\r\n    return(\r\n        <form className={s.post} onSubmit={props.handleSubmit}>\r\n                <div className={s.wrapper}>\r\n                    <img src={props.imgUrl} alt=\"User-img\" className={s.user_img} />\r\n                    <Field name=\"newPostText\" component={'textarea'} className={s.post_text} />\r\n                </div>\r\n                <div className={s.btn_group}>\r\n                    <button className={s.btn}>Post</button>\r\n                </div>\r\n            </form>\r\n    );\r\n}\r\n\r\n const NewProfilePostFormRedux = reduxForm({form:'newProfilePostForm'})(NewProfilePostForm);\r\nexport default ProfileNewPost;","import React from 'react';\r\nimport { addPost } from '../../../../../../redux/profilePageReducer';\r\nimport ProfileNewPost from './ProfileNewPost';\r\nimport { connect } from 'react-redux';\r\nimport { reset } from 'redux-form';\r\n\r\nconst ProfileNewPostContainer = (props) => {\r\n    const onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n        props.reset('newProfilePostForm');\r\n    };\r\n    return <ProfileNewPost onAddPost={onAddPost} imgUrl={props.imgUrl} />\r\n};\r\n\r\nlet mapStateToProps = (state) => ({imgUrl: state.auth_data.photos.small,})\r\n\r\nexport default connect(mapStateToProps, { addPost, reset })(ProfileNewPostContainer);","import React from 'react';\r\nimport s from './ProfilePost.module.css';\r\nimport { useState } from 'react';\r\n\r\nconst ProfilePost = (props) => {\r\n    let [likesCount, setlikesCount] = useState(0)\r\n    const clickOnLike = ()=>{\r\n        if(likesCount == 0){\r\n            setlikesCount(likesCount+1)\r\n        }else{\r\n            setlikesCount(likesCount-1)\r\n        }\r\n    }\r\n    return (\r\n        <div className={s.post}>\r\n            <div className={s.post_data}>\r\n                <img src={props.post.imgUrl}\r\n                    className={s.user_img} />\r\n                <div className={s.name_and_date}>\r\n                    <p className={s.name}>{props.post.name}</p>\r\n                    <p className={s.date}>{props.post.date}</p>\r\n                </div>\r\n                <div className={s.action} onClick={() => props.deletePostAC(props.post.id)}><i className=\"material-icons\">clear</i></div>\r\n            </div>\r\n            <div className={s.post_content}>\r\n                <p className={s.text_content}>{props.post.text}</p>\r\n            </div>\r\n            <div className={s.like_block}>\r\n                <a onClick={clickOnLike} className={likesCount == 0 ? s.like_btn: s.like_btn_active}>\r\n                    <i className={likesCount == 0  ? \"fa fa-heart-o\":  \"fa fa-heart\"}></i>{likesCount}\r\n                </a>\r\n                <a href=\"##\" className={s.komments_btn}><i className=\"fa fa-comment-o\"></i>{props.post.commentCounts}</a>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default ProfilePost;","import React from 'react';\r\nimport ProfilePost from './ProfilePost';\r\nimport { connect } from 'react-redux';\r\nimport { deletePost } from '../../../../../../redux/profilePageReducer';\r\n\r\nconst ProfilePostContainer = (props) => (\r\n    <ProfilePost post={props.post} deletePost={props.deletePostAC} />\r\n)\r\nexport default connect(null, { deletePost })(ProfilePostContainer);","import React from 'react';\r\nimport s from './ProfilePosts.module.css'\r\nimport ProfileNewPostContainer from './ProfileNewPost/ProfileNewPostContainer';\r\nimport { connect } from 'react-redux';\r\nimport ProfilePostContainer from './ProfilePost/ProfilePostContainer';\r\n\r\n\r\nconst ProfilePosts = (props) => {\r\n    return (\r\n        <div className={`${s.content} col-sm-7`}>\r\n            <ProfileNewPostContainer />\r\n\r\n            {[...props.profile_page.posts_data].reverse().map(post => (\r\n            <ProfilePostContainer key={Math.random() *10 } post={post}/>)\r\n            )}\r\n        </div>\r\n    )\r\n};\r\nconst mapStateToProps = (state) => ({profile_page: state.profile_page})\r\nexport default connect(mapStateToProps, {})(ProfilePosts);","import React from 'react';\r\nimport s from './ProfileLeftSide.module.css'\r\n\r\nconst ProfileLeftSide = () => {\r\n    return (\r\n        <div className={`${s.content} col-sm-5`}>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\nexport default ProfileLeftSide;","import React from 'react';\r\nimport ProfilePosts from './ProfilePosts/ProfilePosts';\r\nimport ProfileLeftSide from './ProfileLeftSide/ProfileLeftSide';\r\n\r\n\r\nconst ProfileContent = (props) => {\r\n    return (\r\n        <div className=\"row\">\r\n            <ProfileLeftSide />\r\n            <ProfilePosts  />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileContent;","import React, { useState, useEffect } from 'react';\r\nimport s from './ProfileHeader.module.scss';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { upStatusDataTC } from '../../../../redux/profilePageReducer';\r\n\r\nconst ProfileStatus = (props) => {\r\n    const isAuthUserProfile = props.match.params.user_id == props.auth_user_id;\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status_data)\r\n    const activEditMode = () => {\r\n        props.match.params.user_id == props.auth_user_id && setEditMode(true)\r\n    }\r\n    useEffect(()=>{\r\n        setStatus(props.status_data)\r\n    },[props.status_data])\r\n    const deActivEditMode = () => {\r\n        setEditMode(false)\r\n        props.upStatusDataTC(status);\r\n    }\r\n    const upStatus = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div className={s.status}>\r\n            {!editMode\r\n                ? <span onDoubleClick={activEditMode}>{props.status_data || 'No status'}</span>\r\n                : isAuthUserProfile && <input value={status} onChange={upStatus} autoFocus={true} type=\"text\" onBlur={deActivEditMode} />}\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth_user_id: state.auth_data.data.id,\r\n        status_data: state.profile_page.status_data,\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, {upStatusDataTC,}), withRouter)(ProfileStatus);","import React from 'react';\r\nimport s from '../ProfileHeader.module.scss';\r\nimport { reduxForm, Field } from 'redux-form';\r\n\r\nconst EditProfileInfo = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.edit_mode}>\r\n            <div className={s.user_features}>\r\n                <div className={s.user_data_names}>\r\n                    <p>About me:</p>\r\n                    <p>look for work:</p>\r\n                    <div className={s.contacts_block}>\r\n                        {Object.keys(props.user_data.contacts).map(key => <p key={Math.random()*10}>{key}:</p>)}\r\n                    </div>\r\n                </div>\r\n                <div className={s.edit_mode_inputs}>\r\n                    <Field name={'aboutMe'} type=\"text\" component=\"input\" />\r\n                    <label className={s.switch}>\r\n                        <Field name={'lookingForAJob'} type=\"checkbox\" component=\"input\" />\r\n                        <span className={s.slider}></span>\r\n                    </label>\r\n                    {Object.keys(props.user_data.contacts).map(key => (\r\n                    <Field key={Math.random()*10} name={'contacts.'+ key} type=\"text\" component=\"input\"  />\r\n                    ))}   \r\n                </div>\r\n                {props.error &&\r\n                    <div className={s.error}>\r\n                    <span>{props.error}</span>\r\n                </div>\r\n                }  \r\n            </div>\r\n            <button className={s.save_edit_info}>\r\n                <i className=\"material-icons\">done</i>Save\r\n            </button> \r\n        </form>\r\n    );\r\n}\r\n\r\nexport default reduxForm({form: \"edit_profile_info\"})(EditProfileInfo);","import React from 'react';\r\nimport s from '../ProfileHeader.module.scss';\r\nimport EditProfileInfo from './EditProfileInfo';\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    const onEditInfo = (formData) => {\r\n        let profile_data = { ...formData, fullName: \"Kirill Baturevich\" }\r\n        props.updateProfileInfoTC(profile_data)\r\n        props.setEditMode(false)\r\n    }\r\n\r\n    if (!props.viewMoreInfo && !props.isOwner) {\r\n        return <div className={s.more_info}>\r\n            <button className={s.show_more} onClick={() => props.setViewMoreInfo(true)}>\r\n                Show more information\r\n                <i className=\"fa fa-angle-down\"></i>\r\n            </button>\r\n        </div>\r\n    } return (\r\n        <div className={s.more_info}>\r\n            {props.editMode\r\n                ? <EditProfileInfo setEditMode={props.setEditMode} device={props.device} \r\n                    user_data={props.user_data} initialValues={props.user_data}\r\n                    onSubmit={onEditInfo} setEditMode={props.setEditMode} />\r\n                : <div className={s.user_features}>\r\n                    <ul className={s.features_list}>\r\n                        <li>About me:</li>\r\n                        <li>look for work:</li>\r\n                        {Object.keys(props.user_data.contacts).map(key => (\r\n                            <li key={Math.random() * 10} className={s.contacts_item}>{props.user_data.contacts[key] && key}</li>))}\r\n                    </ul>\r\n                    <ul className={s.answers_list}>\r\n                        <li>{props.user_data.aboutMe || \"Data is not defined\"}</li>\r\n                        <li>{props.user_data.lookingForAJob ? \"Yes\" : \"No\"}</li>\r\n                        {Object.keys(props.user_data.contacts).map(key => (\r\n                            <li key={Math.random() * 10}>{props.user_data.contacts[key]}</li>))}\r\n                    </ul>\r\n                </div>\r\n            }\r\n            {!props.isOwner &&\r\n                <button className={s.hide_more} onClick={() => props.setViewMoreInfo(false)}>\r\n                    Hide more information<i className=\"fa fa-angle-up\"></i>\r\n                </button>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","import { AppStateType } from './store';\r\n// Profile selectors\r\nexport const getProfileUserData = (state: AppStateType) => {\r\n    return state.profile_page.user_data;\r\n};\r\nexport const getProfileIsLoading = (state: AppStateType)=>{\r\n    return state.profile_page.isLoading\r\n};","import React from 'react';\r\nimport s from './ProfileHeader.module.scss'\r\nimport { connect } from 'react-redux';\r\nimport { getProfileUserData } from '../../../../redux/selectors';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { uploadPhotoTC } from '../../../../redux/profilePageReducer';\r\nimport { useState } from 'react';\r\nimport { reqAuthPhoto } from '../../../../redux/authReducer';\r\nimport { useEffect } from 'react';\r\n\r\nconst ProfilePhoto = (props) => {\r\n    let [settingPhoto, setSettingPhoto] = useState(false)\r\n    useEffect(()=>{\r\n\r\n    })\r\n    const onUploadPhoto = (e) => {\r\n        if (e.target.files.length) {\r\n            setSettingPhoto(true)\r\n            props.uploadPhotoTC(e.target.files[0]).then(()=>{\r\n                    setSettingPhoto(false)\r\n                    reqAuthPhoto(props.auth_user_id)\r\n                })\r\n        }\r\n    }\r\n    return (\r\n        <div className={`${s.profile__item} ${s.profile__item_img_block}`}>\r\n            {settingPhoto\r\n                ? <div className={s.setting_photo}>\r\n                    <p className={s.setting_text}>Setting photo...</p>\r\n                </div>\r\n                : <> <img src={\r\n                        props.user_data.photos.large || \"https://baturevich.ru/images/cn/user2.jpg\"} \r\n                        alt=\"User_img\" className={s.profile__img} />\r\n                    {props.match.params.user_id == props.auth_user_id &&\r\n                        <label className={s.upload_photo}>\r\n                            <i className=\"material-icons\">get_app</i>\r\n                            <input type=\"file\" onChange={onUploadPhoto} />\r\n                        </label>\r\n                    }</>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToprops = (state) => {\r\n    return {\r\n        user_data: getProfileUserData(state),\r\n        auth_user_id: state.auth_data.data.id,\r\n    }\r\n}\r\nexport default compose(connect(mapStateToprops,{ uploadPhotoTC,reqAuthPhoto}),withRouter)(ProfilePhoto);","import React from 'react';\r\nimport s from './ProfileHeader.module.scss';\r\nconst ProfileCounter = (props)=>{\r\n    return(\r\n        <div className={`${s.profile__item} ${s.short_data_content} ${s.main_info_item}`}>\r\n            <div className={s.profile_data}>\r\n              <p className={s.profile_data__number}>{props.posts_data.length || \"0\"}</p>Posts\r\n                </div>\r\n            <div className={s.profile_data}>\r\n              <p className={s.profile_data__number}>{props.user_data.music_count || \"64\"}</p>Music\r\n                </div>\r\n            <div className={s.profile_data}>\r\n              <p className={s.profile_data__number}>{props.user_data.videos_count || \"3\"}</p>Videos\r\n                </div>\r\n            <div className={s.profile_data}>\r\n              <p className={s.profile_data__number}>{props.user_data.followers_count || \"137\"}</p>Followers\r\n                </div>\r\n          </div>\r\n    )\r\n}\r\nexport default ProfileCounter;","import React from 'react';\r\nimport s from './ProfileHeader.module.scss';\r\nimport ProfileStatus from './ProfileStatus'\r\nimport { NavLink, } from 'react-router-dom';\r\nimport ProfileInfo from './Profileinfo/Profilejnfo';\r\nimport ProfilePhoto from './ProfilePhoto';\r\nimport ProfileCounter from './ProfileCounter';\r\n\r\nconst ProfileHeader = (props) => {\r\n  return (\r\n    <div className={s.profile__info}>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-3 col-xs-12 col-sm-12\">\r\n          <ProfilePhoto user_data={props.profile_page.user_data} isAuthUserProfile={props.isAuthUserProfile} />\r\n          <div className={s.assets}>\r\n            {!props.isOwner\r\n              ? <div className={s.button_group}>\r\n                <button>Follow</button>\r\n                <NavLink to={`/chats/${+props.profile_page.user_data.userId}`} >New Message</NavLink>\r\n              </div>\r\n              : !props.editMode\r\n                ? <button className={s.edit_btn} onClick={()=>props.toggleEditMode(true)}>\r\n                  <i className=\"material-icons\">edit</i> Edit</button>\r\n                : <button className={s.edit_btn} onClick={()=>props.toggleEditMode(false)}>\r\n                  Close</button>\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-9 col-xs-12 col-sm-12\">\r\n          <div className={s.main_info}>\r\n            <div className={`${s.profile__item} ${s.main_info_item} d-block`}>\r\n              <h1 className={s.profile__name}>{props.profile_page.user_data.fullName || \"No name\"}\r\n              </h1>\r\n              <ProfileStatus status_data={props.profile_page.status_data} />\r\n            </div>\r\n            <div className={`${s.main_info_item}`}>\r\n              <ProfileInfo user_data={props.profile_page.user_data} isOwner={props.isOwner}\r\n                device={props.device} isOwner={props.isOwner}\r\n                setViewMoreInfo={props.setViewMoreInfo}\r\n                setEditMode={props.setEditMode}\r\n                viewMoreInfo={props.viewMoreInfo} editMode={props.editMode}\r\n                updateProfileInfoTC={props.updateProfileInfoTC} />\r\n            </div>\r\n            <ProfileCounter user_data={props.profile_page.user_data} posts_data={props.profile_page.posts_data} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileHeader;","import React, { useState } from 'react';\r\nimport ProfileHeader from './ProfileHeader';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    getProfileDataTC, getStatusDataTC, upStatusDataTC, updateProfileInfoTC,\r\n} from '../../../../redux/profilePageReducer';\r\nimport Preloader from '../../../common/Preloader/Preloader';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { isAuthUserPage } from '../../../../utils/isAuthUserPage';\r\n\r\n\r\nconst ProfileHeaderContainer = (props) => {\r\n    const isOwner = isAuthUserPage(props.auth_user_id, props.match.params.user_id )\r\n    const [viewMoreInfo, setViewMoreInfo] = useState(false)\r\n    const [editMode, setEditMode] = useState(false)\r\n    const toggleEditMode = (answer)=>{\r\n        setViewMoreInfo(answer)\r\n        setEditMode(answer)\r\n    }\r\n    return (\r\n        <>\r\n            {props.profile_page.isLoading == true\r\n                ? <Preloader />\r\n                : props.profile_page.isSetProfileData && <ProfileHeader           \r\n                    isOwner={isOwner}\r\n                    editMode={editMode}                   \r\n                    viewMoreInfo={viewMoreInfo}\r\n                    profile_page={props.profile_page}\r\n                    device={props.device}\r\n                    toggleEditMode={toggleEditMode}\r\n                    setEditMode={setEditMode}\r\n                    setViewMoreInfo={setViewMoreInfo}\r\n                    updateProfileInfoTC={props.updateProfileInfoTC}\r\n                />\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile_page: state.profile_page,\r\n        auth_user_id: state.auth_data.data.id,\r\n        device: state.app.device\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getProfileDataTC, getStatusDataTC, upStatusDataTC,updateProfileInfoTC, }),\r\n    withRouter,\r\n)(ProfileHeaderContainer) \r\n","\r\nexport const isAuthUserPage = (auth_user_id, url_user_id)=>{\r\n    if(auth_user_id == url_user_id){\r\n        return true\r\n    } else{\r\n        return false\r\n    }\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileContent from './ProfileContent/ProfileContent'\r\nimport ProfileHeaderContainer from './ProfileHeader/ProfileHeaderContainer';\r\nimport { getStatusDataTC, getProfileDataTC } from '../../../redux/profilePageReducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Profile = (props) => {\r\n    useEffect(() => {\r\n        let user_id = props.match.params.user_id;\r\n        props.getStatusDataTC(user_id);\r\n        props.getProfileDataTC(user_id);\r\n    }, [])\r\n    useEffect(() => {\r\n        props.getProfileDataTC(props.match.params.user_id);\r\n    }, [props.match.params.user_id])\r\n    \r\n    return (\r\n        <div className={s.profile}>\r\n            <ProfileHeaderContainer />\r\n            <ProfileContent />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default compose(connect(null, { getStatusDataTC, getProfileDataTC }),withRouter,)(Profile);","import React from 'react';\r\nimport AppPreloader from '../AppPreloader/AppPreloader'\r\nconst withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<AppPreloader/>}>\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    }\r\n}\r\nexport default withSuspense;","import React, { useState } from 'react';\r\nimport s from './Content.module.scss'\r\nimport { NavLink } from 'react-router-dom';\r\nconst StartScreen = (props) => {\r\n    const [lng, setlng] = useState(\"eng\");\r\n    return <>\r\n            {lng === \"eng\"\r\n            ? <StartScreenEng setlng={setlng} device={props.device} />\r\n            : <StartScreenRus setlng={setlng} device={props.device} />}\r\n            <NavLink className={s.started} to={`/profile/${+ props.auth_user_id}`}>\r\n                {lng === \"eng\" ? \"Get started\": \"Начать знакомиться\"}\r\n            </NavLink>\r\n            </>\r\n}\r\n\r\nconst StartScreenEng = (props)=>{\r\n    return(\r\n            <div className={s.startScreen}>\r\n                <div className={s.chgLanguage}>\r\n                    <span onClick={() => props.setlng(\"rus\")}><i className=\"material-icons\">language</i>Rus</span>\r\n                </div>\r\n                <h1>Vision</h1>\r\n                <div className={s.startScreen_text}><h2>I welcome you here!</h2>\r\n                    <p>This is a test social network \"Vision.com\". With this network, I learn web development in practice.<br></br>\r\n            Based on \"Vision.com\" lies <a href=\"https://reactjs.org/\" target=\"_blank\">React</a> and\r\n            <a href=\"https://redux.js.org/\" target=\"_blank\"> Redux</a>.</p>\r\n                    <p>I used both \"React hooks\" and class components to try different development approaches.\r\n                <br></br>\r\n                You can check the full list of technologies and solutions with me:\r\n                 <a href=\"mailto:batureevich@yandex.ru\"> batureevich@yandex.ru</a></p>\r\n\r\n                    <h3>At the moment, there are 3 pages working here.</h3>\r\n                    <ul>\r\n                        <li>Users - a Page with users.</li>\r\n                        <li>Profile - a Page with data about a user.</li>\r\n                        <li>Messages - a Page with messages.</li>\r\n                    </ul>\r\n                    <p>You can navigate the page using the sidebar on the\r\n            {props.device === \"mobile\" ? \" bottom\" : \" left side\"} of the screen. Glad to be of service!</p>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\nconst StartScreenRus = (props)=>{\r\n    return(\r\n            <div className={s.startScreen}>\r\n                <div className={s.chgLanguage}>\r\n                    <span onClick={() => props.setlng(\"eng\")}><i className=\"material-icons\">language</i>Eng</span>\r\n                </div>\r\n                <h1>Vision</h1>\r\n                <div className={s.startScreen_text}><h2>Приветствую вас здесь! </h2>\r\n                    <p>Это тестовая социальная сеть \"vision.com\",  с помощью этой сети я обучаюсь веб разработке на практике.\r\nВ основе Vision.com лежит <a href=\"https://reactjs.org/\" target=\"_blank\">React</a> и\r\n            <a href=\"https://redux.js.org/\" target=\"_blank\"> Redux</a>.</p>\r\n                    <p>Я использовал как \"хуки\" так и классовые компоненты, чтобы попробовать разные подходы разработки.\r\n                <br></br>\r\n                Полный список технологий и решений можете уточнить лично у меня:\r\n                <a href=\"mailto:batureevich@yandex.ru\"> batureevich@yandex.ru</a></p>\r\n\r\n                    <h3>На данный момент  работают 3 страницы.</h3>\r\n                    <ul>\r\n                        <li>Users - Страница с пользователями.</li>\r\n                        <li>Profile - Страница с данными о каком - либо пользователе.</li>\r\n                        <li>Messages  - Страница сообщений.</li>\r\n                    </ul>\r\n                    <p>Навигация по странице осуществляется с помощью сайдбара\r\n                 в  {props.device === \"mobile\" ? \" нижней\" : \" левой\"} части экрана. Рад быть полезным! </p>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default StartScreen;","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Profile from '../../Contents/Profile/Profile';\r\nimport withSuspense from '../../common/HOComponents/withSuspense';\r\nimport { connect } from 'react-redux';\r\nimport StartScreen from './StartScreen';\r\nconst Chats = React.lazy(() => import('../../Contents/Chats/Chats'));\r\nconst Users = React.lazy(() => import('../../Contents/Users/Users'));\r\n\r\n\r\nconst Content = (props)=> {\r\n    return (\r\n      <div className=\"content_container\">\r\n        <div className=\"container-fluid\">\r\n          <Route path=\"/profile/:user_id\" render={withSuspense(Profile)} />\r\n          <Route path=\"/chats\" render={withSuspense(Chats)}/>\r\n          <Route path=\"/vision\" render={()=>\r\n            <StartScreen device={props.device} auth_user_id={props.auth_user_id}/>}/>\r\n          <Route path='/users' render={withSuspense(Users)}/>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\nconst mapStateToProps = (state) =>({device:state.app.device, auth_user_id: state.auth_data.data.id})\r\nexport default connect(mapStateToProps,{})(Content);","import React  from 'react';\r\nimport s from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ntype PropsType = {\r\n  name: string,\r\n  imgUrl: string,\r\n  user_id: number,\r\n  deLoginTC: ()=> void\r\n}\r\n\r\nconst Header: React.FC<PropsType>=  (props) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className={s.header__wrapper}>\r\n        <NavLink to=\"/vision\" className={s.header__logo}>Vision.com</NavLink>\r\n        <div className={`${s.input_wrapper}`}>\r\n          <input type=\"text\" className={s.search_input} placeholder=\"Search\" />\r\n          <NavLink to=\"/vision\" className={s.search_btn}><i className=\"fa fa-search\"></i></NavLink>\r\n        </div>\r\n        <div className={s.user_ungle}>\r\n          <a href=\"##\" className={s.user_notification}><i className=\"fa fa-bell-o\"></i></a>\r\n          <NavLink to={`/profile/${props.user_id}`} className={s.profile_name}>{props.name}</NavLink>\r\n          <img src={props.imgUrl} \r\n            className={props.imgUrl ? s.profile_img : s.profile_img_none} />\r\n          <button className={s.logout} onClick={props.deLoginTC} >Log Out</button>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport {AppStateType} from '../../../redux/store'\r\nimport { connect } from 'react-redux';\r\nimport { deLoginTC } from '../../../redux/authReducer';\r\n\r\ntype PropsType = {\r\n    name: string,\r\n    imgUrl: string,\r\n    user_id: number,\r\n    deLoginTC: ()=> void\r\n}\r\n\r\nconst HeaderContainer : React.FC<PropsType> = (props)=> (<Header {...props}/>)\r\n\r\nconst mapStateToProps = (state: AppStateType)=>{\r\n    return{\r\n        name: state.auth_data.data.login,\r\n        imgUrl: state.auth_data.photos.small,\r\n        user_id: state.auth_data.data.id,\r\n    }    \r\n}\r\n\r\nexport default connect(mapStateToProps,{deLoginTC })(HeaderContainer)\r\n","import React from 'react';\r\nimport s from './Navigation.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { DeviceType } from '../../../redux/appReducer';\r\n\r\ntype PropsType = {user_id: number,device: DeviceType}\r\n\r\nconst Navigation: React.FC<PropsType> = (props) => {\r\n  return (\r\n    <section className=\"navigation\">\r\n      <ul className={s.menu}>\r\n        <li className={s.menu__item}>\r\n          <NavLink to={`/profile/${props.user_id}`} className={s.menu__link}><i className=\"fa fa-user\"></i><span>My profile</span></NavLink>\r\n        </li>\r\n        <li className={s.menu__item}>\r\n          <NavLink to=\"/newsfeed\" className={s.menu__link}><i className=\"fa fa-newspaper-o\"></i><span>Newsfees</span></NavLink>\r\n        </li>\r\n        <li className={s.menu__item}>\r\n          <NavLink to=\"/chats\" className={s.menu__link}><i className=\"fa fa-comments\"></i><span>Messages</span></NavLink>\r\n        </li>\r\n        <li className={s.menu__item}>\r\n          <NavLink to=\"/users\" className={s.menu__link}><i className=\"fa fa-users\"></i><span>Users</span></NavLink>\r\n        </li>\r\n        <li className={s.menu__item}>\r\n          <NavLink to=\"/videos\" className={s.menu__link}><i className=\"fa fa-video-camera\"></i><span>Videos</span></NavLink>\r\n        </li>\r\n        <li className={s.menu__item}>\r\n          <NavLink to=\"/music\" className={s.menu__link}><i className=\"fa fa-music\"></i><span>Music</span></NavLink>\r\n        </li>\r\n        {props.device != \"mobile\" &&\r\n        <>\r\n          <li className={s.menu__item}>\r\n            <NavLink to=\"/bookmarks\" className={s.menu__link}><i className=\"fa fa-star\"></i><span>Bookmsrks</span></NavLink>\r\n          </li>\r\n          <li className={s.menu__item}>\r\n            <NavLink to=\"/documents\" className={s.menu__link}><i className=\"fa fa-file\"></i><span>Documents</span></NavLink>\r\n          </li>\r\n          </>\r\n        }\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Navigation from './Navigation';\r\nimport { AppStateType } from '../../../redux/store';\r\nimport { DeviceType } from '../../../redux/appReducer';\r\n\r\ntype PropsType={user_id: number,device: DeviceType}\r\n\r\nconst NavigationContainer: React.FC<PropsType>= (props) =>(\r\n    <Navigation user_id={props.user_id} device={props.device} />\r\n);\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    user_id: state.auth_data.data.id,\r\n    device: state.app.device,\r\n})\r\n\r\nexport default connect(mapStateToProps,{})(NavigationContainer);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getAuthDataTC, reqAuthPhoto } from '../../redux/authReducer';\r\nimport Content from './Content/Content';\r\nimport HeaderContainer from './Header/HeaderContainer';\r\nimport NavigationContainer from './Navigation/NavigationContainer';\r\n\r\n\r\nclass SocNet extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getAuthDataTC()\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"CN_wrapper\">\r\n                <HeaderContainer />\r\n                <Content />\r\n                <NavigationContainer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({ auth_user_id: state.auth_data.data.id, })\r\nexport default connect(mapStateToProps, { getAuthDataTC, reqAuthPhoto })(SocNet)","import React, { useState, useEffect } from 'react';\r\nimport s from './GlobalError.module.css'\r\nclass GlobalError extends React.Component {\r\n    state = {\r\n        showError: false\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.global_errors.length != this.props.global_errors.length) {\r\n            this.setState({ showError: true })\r\n        }\r\n    }\r\n    render() {\r\n        let currentError = this.props.global_errors.length - 1;\r\n        return (\r\n            <>\r\n                {this.state.showError &&\r\n                    <div className={s.wrapper}>\r\n                        <div className={s.error}>\r\n                            <h1>{this.props.global_errors[currentError]}</h1>\r\n                            <span onClick={() => this.setState({ showError: false })}>\r\n                                <i className=\"material-icons\">close</i> Close\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default GlobalError;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Login from './components/main/Login/Login.jsx';\r\nimport { Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { initializeTC } from './redux/appReducer'\r\nimport AppPreloader from './components/common/AppPreloader/AppPreloader.jsx';\r\nimport SocNet from './components/main/SocNet.jsx';\r\nimport GlobalError from './components/common/GlobalError/GlobalError.jsx';\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    this.props.initializeTC()\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <AppPreloader />\r\n    } else {\r\n      if (!this.props.isAuth) {\r\n        return (\r\n          <>\r\n            <Redirect to=\"/login\"/>\r\n            <Route path='/login' render={() => <Login />} />\r\n          </>\r\n        )\r\n      } return(\r\n        <>\r\n          <GlobalError global_errors={this.props.global_errors}/>\r\n          <SocNet />\r\n        </>\r\n      )\r\n    }\r\n  };\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.auth_data.isLoading,\r\n    isAuth: state.auth_data.isAuth,\r\n    auth_user_id: state.auth_data.data.id,\r\n    initialized: state.app.initialized,\r\n    global_errors: state.app.global_errors,\r\n  }\r\n};\r\n\r\n\r\n\r\nexport default compose(connect(mapStateToProps, { initializeTC, }), withRouter)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './css/reset.css';\r\nimport './css/index.css';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport App from './App.jsx';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <HashRouter >\r\n         <App />\r\n      </HashRouter>\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileNewPost_content__3kSsj\",\"preview\":\"ProfileNewPost_preview__3T-pK\",\"title\":\"ProfileNewPost_title__3fKHz\",\"wrapper\":\"ProfileNewPost_wrapper__2AgtZ\",\"user_img\":\"ProfileNewPost_user_img__3OsNW\",\"post_text\":\"ProfileNewPost_post_text__28jdg\",\"btn_group\":\"ProfileNewPost_btn_group__w-wtX\",\"btn\":\"ProfileNewPost_btn__ReA89\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile__header\":\"ProfileHeader_profile__header__3TLi3\",\"profile__cover\":\"ProfileHeader_profile__cover__3-7B3\",\"profile__info\":\"ProfileHeader_profile__info__OvoNP\",\"main_info\":\"ProfileHeader_main_info__3iH2p\",\"main_info_item\":\"ProfileHeader_main_info_item__2vp-Q\",\"soc_net_on_profile\":\"ProfileHeader_soc_net_on_profile__PjihK\",\"soc_net_on_profile__item\":\"ProfileHeader_soc_net_on_profile__item__1PSHZ\",\"profile__item\":\"ProfileHeader_profile__item__1U5Hx\",\"profile__name\":\"ProfileHeader_profile__name__38T9M\",\"status\":\"ProfileHeader_status__2LM8x\",\"button_group\":\"ProfileHeader_button_group__2HGFm\",\"edit_btn\":\"ProfileHeader_edit_btn__152ez\",\"show_more\":\"ProfileHeader_show_more__349GG\",\"profile_data\":\"ProfileHeader_profile_data__3OqIr\",\"short_data_content\":\"ProfileHeader_short_data_content__1eLhI\",\"profile_data__number\":\"ProfileHeader_profile_data__number__1MONX\",\"more_info\":\"ProfileHeader_more_info__2dRTt\",\"more_item\":\"ProfileHeader_more_item__K8fJM\",\"user_features\":\"ProfileHeader_user_features__sveZ5\",\"answers_list\":\"ProfileHeader_answers_list__1G1hf\",\"contacts_item\":\"ProfileHeader_contacts_item__1T66v\",\"hide_more\":\"ProfileHeader_hide_more__1h8mT\",\"edit_info\":\"ProfileHeader_edit_info__3-Gre\",\"edit_info_mobile\":\"ProfileHeader_edit_info_mobile__3h9vp\",\"save_edit_info\":\"ProfileHeader_save_edit_info__QV84-\",\"save_edit_info_mobile\":\"ProfileHeader_save_edit_info_mobile__1dVIo\",\"close_edit_info\":\"ProfileHeader_close_edit_info__25LmD\",\"edit_mode_inputs\":\"ProfileHeader_edit_mode_inputs__3z9XW\",\"contacts_block\":\"ProfileHeader_contacts_block__34uQQ\",\"switch\":\"ProfileHeader_switch__3SHTM\",\"slider\":\"ProfileHeader_slider__2T0Wp\",\"error\":\"ProfileHeader_error__2xpPa\",\"profile__item_img_block\":\"ProfileHeader_profile__item_img_block__1l0S8\",\"profile__img\":\"ProfileHeader_profile__img__2Mu3o\",\"upload_photo\":\"ProfileHeader_upload_photo__3dAgs\",\"setting_photo\":\"ProfileHeader_setting_photo__38eE4\",\"setting_text\":\"ProfileHeader_setting_text__169fD\",\"assets\":\"ProfileHeader_assets__2_8DO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"startScreen\":\"Content_startScreen__176mY\",\"startScreen_text\":\"Content_startScreen_text__1F4_P\",\"chgLanguage\":\"Content_chgLanguage__IVOYp\",\"started\":\"Content_started__2Xe8I\"};","export const GetCurrentDate = (data_type)=>{\r\n    let now = new Date(),\r\n    day = now.getDate(),\r\n    month = now.getMonth(),\r\n    hour = now.getHours(),\r\n    minutes = now.getMinutes(),\r\n    fmonth;\r\n    if (minutes < 10) {\r\n        minutes = \"0\" + minutes;\r\n    };\r\n    switch (month) {\r\n        case 0: fmonth = \"Jan\"; break;\r\n        case 1: fmonth = \"Feb\"; break;\r\n        case 2: fmonth = \"March\"; break;\r\n        case 3: fmonth = \"Apr\"; break;\r\n        case 4: fmonth = \"May\"; break;\r\n        case 5: fmonth = \"June\"; break;\r\n        case 6: fmonth = \"July\"; break;\r\n        case 7: fmonth = \"Aug\"; break;\r\n        case 8: fmonth = \"Sep\"; break;\r\n        case 9: fmonth = \"Oct\"; break;\r\n        case 10: fmonth = \"Nov\"; break;\r\n        case 11: fmonth = \"Dec\"; break;\r\n    default: ;\r\n    };\r\n    if(data_type == \"full_date\"){\r\n        return  day + \" \" + fmonth + \" at \" + hour + \":\" + minutes;\r\n    } else{\r\n        return  hour + \":\" + minutes;\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormLoginConrol_formControl__2QY-_\",\"error\":\"FormLoginConrol_error__1oxDD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"GlobalError_wrapper__3KCTa\",\"error\":\"GlobalError_error__2j0Af\"};","import { UserAPI, ProfileAPI } from \"../API/Api\";\r\nimport {GetCurrentDate} from '../utils/GetCurrentDate/GetCurrentDate';\r\n\r\n//Actions\r\nconst ADD_MESS = \"ADD_MESS\";\r\nconst DELETE_MESSAGE = \"DELETE_MESSAGE\";\r\nconst SET_DIALOGS_DATA = \"SET_DIALOGS_DATA\";\r\nconst SET_MESSAGES_DATA =\"SET_MESSAGES_DATA\";\r\nconst IS_LOADING = \"IS_LOADING\";\r\n\r\ntype MessagesDataType ={id: number, name: string, text: string, date: string, imgUrl: string}\r\n\r\nlet initialState = {\r\n    dialogs_data: [] as Array<{}> ,\r\n    messages_data: [{\r\n        id: Math.random()*3,\r\n        name: \"Kirill Baturevich\",\r\n        text: \"mess_text\",\r\n        date: \"12:09\",\r\n        imgUrl: \"https://baturevich.ru/images/cn/user2.jpg\",},] as Array<MessagesDataType>,\r\n    mes_header_data: {},\r\n    isLoading:false,\r\n};\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst chatsPageReducer = (state = initialState, action:any):InitialStateType => {\r\n    switch (action.type) {\r\n        case IS_LOADING:{\r\n            return {\r\n                ...state, isLoading: action.answer\r\n            }\r\n        }\r\n        case ADD_MESS:{\r\n            let mess_text = action.mess_text;\r\n            let mess_id = state.messages_data.length;\r\n            let new_mess = {\r\n                id: mess_id,\r\n                name: \"Kirill Baturevich\",\r\n                text: mess_text,\r\n                date: GetCurrentDate(\"small_date\"),\r\n                imgUrl: \"https://baturevich.ru/images/cn/user2.jpg\",\r\n            };\r\n            if (mess_text) {            \r\n                return{\r\n                    ...state,\r\n                    messages_data: [...state.messages_data, new_mess]\r\n                }\r\n            };          \r\n        }\r\n        case DELETE_MESSAGE:{\r\n            return {\r\n                ...state,\r\n                messages_data: state.messages_data.filter( m => m.id != action.mess_id)\r\n            }\r\n        }case SET_DIALOGS_DATA:{\r\n            return {\r\n                ...state, dialogs_data: action.users\r\n            }\r\n        }\r\n        case SET_MESSAGES_DATA:{\r\n            return {\r\n                ...state, mes_header_data: action.mes_data\r\n            }\r\n        }   \r\n        default:\r\n            return state;\r\n    };\r\n};\r\n//Actions Creators\r\ntype IsLoadingType = {type: typeof IS_LOADING, answer: boolean }\r\nexport const isLoading = (answer:boolean):IsLoadingType =>({type: IS_LOADING, answer});\r\n\r\ntype AddMessType={type: typeof ADD_MESS, mess_text: string}\r\nexport const addMess = (mess_text:string):AddMessType => ({type: ADD_MESS, mess_text});\r\n\r\ntype DelMessType = {type: typeof DELETE_MESSAGE, mess_id: number}\r\nexport const delMess = (mess_id:number):DelMessType => ({type: DELETE_MESSAGE, mess_id : mess_id});\r\n\r\ntype SetDialogsDataType ={type: typeof SET_DIALOGS_DATA, users: [] }\r\nexport const setDialogsData = (users: [] ):SetDialogsDataType =>({type: SET_DIALOGS_DATA, users});\r\n\r\ntype SetMessagesDataType = {type:typeof SET_MESSAGES_DATA, mes_data: MessagesDataType }\r\nexport const setMessagesData = (mes_data: MessagesDataType):SetMessagesDataType =>(\r\n    {type: SET_MESSAGES_DATA, mes_data});\r\n\r\n//Thunks Creators\r\nexport const getDialogsDataTC = (page: number, page_size: number) =>{\r\n    return async(dispatch:any) =>{\r\n        dispatch(isLoading(true));\r\n        let  data  = await UserAPI.getUsers(page,page_size)\r\n        dispatch(isLoading(false));\r\n        dispatch(setDialogsData(data.items))\r\n    }\r\n};\r\nexport const getMessagesDataTC = (user_id:number) =>{\r\n    return async(dispatch:any)=>{\r\n        dispatch(isLoading(true));\r\n        let response = await ProfileAPI.getProfileData(user_id)\r\n        dispatch(isLoading(false));\r\n        dispatch(setMessagesData(response.data))\r\n    }\r\n};\r\n\r\nexport default chatsPageReducer;","import React from 'react';\r\nimport loadImg from '../../../assets/Loading.gif';\r\nimport s from './Preloader.module.css'\r\nlet Preloader = (props)=>{\r\n    return(\r\n        <div className={s.preloader}><img src={loadImg} alt=\"preloader\"/></div>\r\n    )\r\n};\r\nexport default Preloader;"],"sourceRoot":""}